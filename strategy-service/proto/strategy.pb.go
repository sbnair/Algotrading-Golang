// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/strategy.proto

package strategypb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Strategy struct {
	Id                      string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	StrategyName            string   `protobuf:"bytes,2,opt,name=strategy_name,json=strategyName,proto3" json:"strategy_name,omitempty"`
	SelectedExchange        string   `protobuf:"bytes,3,opt,name=selected_exchange,json=selectedExchange,proto3" json:"selected_exchange,omitempty"`
	StrategyType            string   `protobuf:"bytes,4,opt,name=strategy_type,json=strategyType,proto3" json:"strategy_type,omitempty"`
	StartOrderType          string   `protobuf:"bytes,5,opt,name=start_order_type,json=startOrderType,proto3" json:"start_order_type,omitempty"`
	DealStartCondition      string   `protobuf:"bytes,6,opt,name=deal_start_condition,json=dealStartCondition,proto3" json:"deal_start_condition,omitempty"`
	BaseOrderSize           float64  `protobuf:"fixed64,7,opt,name=base_order_size,json=baseOrderSize,proto3" json:"base_order_size,omitempty"`
	SafetyOrderSize         float64  `protobuf:"fixed64,8,opt,name=safety_order_size,json=safetyOrderSize,proto3" json:"safety_order_size,omitempty"`
	MaxSafetyTradeAcc       string   `protobuf:"bytes,9,opt,name=max_safety_trade_acc,json=maxSafetyTradeAcc,proto3" json:"max_safety_trade_acc,omitempty"`
	PriceDevation           string   `protobuf:"bytes,10,opt,name=price_devation,json=priceDevation,proto3" json:"price_devation,omitempty"`
	SafetyOrderVolumeScale  string   `protobuf:"bytes,11,opt,name=safety_order_volume_scale,json=safetyOrderVolumeScale,proto3" json:"safety_order_volume_scale,omitempty"`
	SafetyOrderStepScale    string   `protobuf:"bytes,12,opt,name=safety_order_step_scale,json=safetyOrderStepScale,proto3" json:"safety_order_step_scale,omitempty"`
	TakeProfit              string   `protobuf:"bytes,13,opt,name=take_profit,json=takeProfit,proto3" json:"take_profit,omitempty"`
	TargetProfit            string   `protobuf:"bytes,14,opt,name=target_profit,json=targetProfit,proto3" json:"target_profit,omitempty"`
	AllocateFundsToStrategy string   `protobuf:"bytes,15,opt,name=allocate_funds_to_strategy,json=allocateFundsToStrategy,proto3" json:"allocate_funds_to_strategy,omitempty"`
	UserId                  string   `protobuf:"bytes,16,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Version                 int64    `protobuf:"varint,17,opt,name=version,proto3" json:"version,omitempty"`
	Status                  string   `protobuf:"bytes,18,opt,name=status,proto3" json:"status,omitempty"`
	Stock                   []*Stock `protobuf:"bytes,19,rep,name=stock,proto3" json:"stock,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *Strategy) Reset()         { *m = Strategy{} }
func (m *Strategy) String() string { return proto.CompactTextString(m) }
func (*Strategy) ProtoMessage()    {}
func (*Strategy) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a9cfd4cb1c623bb, []int{0}
}

func (m *Strategy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Strategy.Unmarshal(m, b)
}
func (m *Strategy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Strategy.Marshal(b, m, deterministic)
}
func (m *Strategy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Strategy.Merge(m, src)
}
func (m *Strategy) XXX_Size() int {
	return xxx_messageInfo_Strategy.Size(m)
}
func (m *Strategy) XXX_DiscardUnknown() {
	xxx_messageInfo_Strategy.DiscardUnknown(m)
}

var xxx_messageInfo_Strategy proto.InternalMessageInfo

func (m *Strategy) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Strategy) GetStrategyName() string {
	if m != nil {
		return m.StrategyName
	}
	return ""
}

func (m *Strategy) GetSelectedExchange() string {
	if m != nil {
		return m.SelectedExchange
	}
	return ""
}

func (m *Strategy) GetStrategyType() string {
	if m != nil {
		return m.StrategyType
	}
	return ""
}

func (m *Strategy) GetStartOrderType() string {
	if m != nil {
		return m.StartOrderType
	}
	return ""
}

func (m *Strategy) GetDealStartCondition() string {
	if m != nil {
		return m.DealStartCondition
	}
	return ""
}

func (m *Strategy) GetBaseOrderSize() float64 {
	if m != nil {
		return m.BaseOrderSize
	}
	return 0
}

func (m *Strategy) GetSafetyOrderSize() float64 {
	if m != nil {
		return m.SafetyOrderSize
	}
	return 0
}

func (m *Strategy) GetMaxSafetyTradeAcc() string {
	if m != nil {
		return m.MaxSafetyTradeAcc
	}
	return ""
}

func (m *Strategy) GetPriceDevation() string {
	if m != nil {
		return m.PriceDevation
	}
	return ""
}

func (m *Strategy) GetSafetyOrderVolumeScale() string {
	if m != nil {
		return m.SafetyOrderVolumeScale
	}
	return ""
}

func (m *Strategy) GetSafetyOrderStepScale() string {
	if m != nil {
		return m.SafetyOrderStepScale
	}
	return ""
}

func (m *Strategy) GetTakeProfit() string {
	if m != nil {
		return m.TakeProfit
	}
	return ""
}

func (m *Strategy) GetTargetProfit() string {
	if m != nil {
		return m.TargetProfit
	}
	return ""
}

func (m *Strategy) GetAllocateFundsToStrategy() string {
	if m != nil {
		return m.AllocateFundsToStrategy
	}
	return ""
}

func (m *Strategy) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *Strategy) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *Strategy) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Strategy) GetStock() []*Stock {
	if m != nil {
		return m.Stock
	}
	return nil
}

type Stock struct {
	StockName            string   `protobuf:"bytes,1,opt,name=stock_name,json=stockName,proto3" json:"stock_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Stock) Reset()         { *m = Stock{} }
func (m *Stock) String() string { return proto.CompactTextString(m) }
func (*Stock) ProtoMessage()    {}
func (*Stock) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a9cfd4cb1c623bb, []int{1}
}

func (m *Stock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Stock.Unmarshal(m, b)
}
func (m *Stock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Stock.Marshal(b, m, deterministic)
}
func (m *Stock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Stock.Merge(m, src)
}
func (m *Stock) XXX_Size() int {
	return xxx_messageInfo_Stock.Size(m)
}
func (m *Stock) XXX_DiscardUnknown() {
	xxx_messageInfo_Stock.DiscardUnknown(m)
}

var xxx_messageInfo_Stock proto.InternalMessageInfo

func (m *Stock) GetStockName() string {
	if m != nil {
		return m.StockName
	}
	return ""
}

type StrategyRevision struct {
	Id                      string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	StrategyName            string   `protobuf:"bytes,2,opt,name=strategy_name,json=strategyName,proto3" json:"strategy_name,omitempty"`
	SelectedExchange        string   `protobuf:"bytes,3,opt,name=selected_exchange,json=selectedExchange,proto3" json:"selected_exchange,omitempty"`
	StrategyType            string   `protobuf:"bytes,4,opt,name=strategy_type,json=strategyType,proto3" json:"strategy_type,omitempty"`
	StartOrderType          string   `protobuf:"bytes,5,opt,name=start_order_type,json=startOrderType,proto3" json:"start_order_type,omitempty"`
	DealStartCondition      string   `protobuf:"bytes,6,opt,name=deal_start_condition,json=dealStartCondition,proto3" json:"deal_start_condition,omitempty"`
	BaseOrderSize           float64  `protobuf:"fixed64,7,opt,name=base_order_size,json=baseOrderSize,proto3" json:"base_order_size,omitempty"`
	SafetyOrderSize         float64  `protobuf:"fixed64,8,opt,name=safety_order_size,json=safetyOrderSize,proto3" json:"safety_order_size,omitempty"`
	MaxSafetyTradeAcc       string   `protobuf:"bytes,9,opt,name=max_safety_trade_acc,json=maxSafetyTradeAcc,proto3" json:"max_safety_trade_acc,omitempty"`
	PriceDevation           string   `protobuf:"bytes,10,opt,name=price_devation,json=priceDevation,proto3" json:"price_devation,omitempty"`
	SafetyOrderVolumeScale  string   `protobuf:"bytes,11,opt,name=safety_order_volume_scale,json=safetyOrderVolumeScale,proto3" json:"safety_order_volume_scale,omitempty"`
	SafetyOrderStepScale    string   `protobuf:"bytes,12,opt,name=safety_order_step_scale,json=safetyOrderStepScale,proto3" json:"safety_order_step_scale,omitempty"`
	TakeProfit              string   `protobuf:"bytes,13,opt,name=take_profit,json=takeProfit,proto3" json:"take_profit,omitempty"`
	TargetProfit            string   `protobuf:"bytes,14,opt,name=target_profit,json=targetProfit,proto3" json:"target_profit,omitempty"`
	AllocateFundsToStrategy string   `protobuf:"bytes,15,opt,name=allocate_funds_to_strategy,json=allocateFundsToStrategy,proto3" json:"allocate_funds_to_strategy,omitempty"`
	UserId                  string   `protobuf:"bytes,16,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Version                 int64    `protobuf:"varint,17,opt,name=version,proto3" json:"version,omitempty"`
	Status                  string   `protobuf:"bytes,18,opt,name=status,proto3" json:"status,omitempty"`
	Stock                   []*Stock `protobuf:"bytes,19,rep,name=stock,proto3" json:"stock,omitempty"`
	StrategyId              string   `protobuf:"bytes,20,opt,name=strategy_id,json=strategyId,proto3" json:"strategy_id,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *StrategyRevision) Reset()         { *m = StrategyRevision{} }
func (m *StrategyRevision) String() string { return proto.CompactTextString(m) }
func (*StrategyRevision) ProtoMessage()    {}
func (*StrategyRevision) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a9cfd4cb1c623bb, []int{2}
}

func (m *StrategyRevision) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StrategyRevision.Unmarshal(m, b)
}
func (m *StrategyRevision) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StrategyRevision.Marshal(b, m, deterministic)
}
func (m *StrategyRevision) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StrategyRevision.Merge(m, src)
}
func (m *StrategyRevision) XXX_Size() int {
	return xxx_messageInfo_StrategyRevision.Size(m)
}
func (m *StrategyRevision) XXX_DiscardUnknown() {
	xxx_messageInfo_StrategyRevision.DiscardUnknown(m)
}

var xxx_messageInfo_StrategyRevision proto.InternalMessageInfo

func (m *StrategyRevision) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *StrategyRevision) GetStrategyName() string {
	if m != nil {
		return m.StrategyName
	}
	return ""
}

func (m *StrategyRevision) GetSelectedExchange() string {
	if m != nil {
		return m.SelectedExchange
	}
	return ""
}

func (m *StrategyRevision) GetStrategyType() string {
	if m != nil {
		return m.StrategyType
	}
	return ""
}

func (m *StrategyRevision) GetStartOrderType() string {
	if m != nil {
		return m.StartOrderType
	}
	return ""
}

func (m *StrategyRevision) GetDealStartCondition() string {
	if m != nil {
		return m.DealStartCondition
	}
	return ""
}

func (m *StrategyRevision) GetBaseOrderSize() float64 {
	if m != nil {
		return m.BaseOrderSize
	}
	return 0
}

func (m *StrategyRevision) GetSafetyOrderSize() float64 {
	if m != nil {
		return m.SafetyOrderSize
	}
	return 0
}

func (m *StrategyRevision) GetMaxSafetyTradeAcc() string {
	if m != nil {
		return m.MaxSafetyTradeAcc
	}
	return ""
}

func (m *StrategyRevision) GetPriceDevation() string {
	if m != nil {
		return m.PriceDevation
	}
	return ""
}

func (m *StrategyRevision) GetSafetyOrderVolumeScale() string {
	if m != nil {
		return m.SafetyOrderVolumeScale
	}
	return ""
}

func (m *StrategyRevision) GetSafetyOrderStepScale() string {
	if m != nil {
		return m.SafetyOrderStepScale
	}
	return ""
}

func (m *StrategyRevision) GetTakeProfit() string {
	if m != nil {
		return m.TakeProfit
	}
	return ""
}

func (m *StrategyRevision) GetTargetProfit() string {
	if m != nil {
		return m.TargetProfit
	}
	return ""
}

func (m *StrategyRevision) GetAllocateFundsToStrategy() string {
	if m != nil {
		return m.AllocateFundsToStrategy
	}
	return ""
}

func (m *StrategyRevision) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *StrategyRevision) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *StrategyRevision) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *StrategyRevision) GetStock() []*Stock {
	if m != nil {
		return m.Stock
	}
	return nil
}

func (m *StrategyRevision) GetStrategyId() string {
	if m != nil {
		return m.StrategyId
	}
	return ""
}

type CreateStrategyReq struct {
	Strategy             *Strategy `protobuf:"bytes,1,opt,name=strategy,proto3" json:"strategy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *CreateStrategyReq) Reset()         { *m = CreateStrategyReq{} }
func (m *CreateStrategyReq) String() string { return proto.CompactTextString(m) }
func (*CreateStrategyReq) ProtoMessage()    {}
func (*CreateStrategyReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a9cfd4cb1c623bb, []int{3}
}

func (m *CreateStrategyReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateStrategyReq.Unmarshal(m, b)
}
func (m *CreateStrategyReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateStrategyReq.Marshal(b, m, deterministic)
}
func (m *CreateStrategyReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateStrategyReq.Merge(m, src)
}
func (m *CreateStrategyReq) XXX_Size() int {
	return xxx_messageInfo_CreateStrategyReq.Size(m)
}
func (m *CreateStrategyReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateStrategyReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateStrategyReq proto.InternalMessageInfo

func (m *CreateStrategyReq) GetStrategy() *Strategy {
	if m != nil {
		return m.Strategy
	}
	return nil
}

type CreateStrategyRes struct {
	Strategy             *Strategy `protobuf:"bytes,1,opt,name=strategy,proto3" json:"strategy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *CreateStrategyRes) Reset()         { *m = CreateStrategyRes{} }
func (m *CreateStrategyRes) String() string { return proto.CompactTextString(m) }
func (*CreateStrategyRes) ProtoMessage()    {}
func (*CreateStrategyRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a9cfd4cb1c623bb, []int{4}
}

func (m *CreateStrategyRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateStrategyRes.Unmarshal(m, b)
}
func (m *CreateStrategyRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateStrategyRes.Marshal(b, m, deterministic)
}
func (m *CreateStrategyRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateStrategyRes.Merge(m, src)
}
func (m *CreateStrategyRes) XXX_Size() int {
	return xxx_messageInfo_CreateStrategyRes.Size(m)
}
func (m *CreateStrategyRes) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateStrategyRes.DiscardUnknown(m)
}

var xxx_messageInfo_CreateStrategyRes proto.InternalMessageInfo

func (m *CreateStrategyRes) GetStrategy() *Strategy {
	if m != nil {
		return m.Strategy
	}
	return nil
}

type UpdateStrategyReq struct {
	Strategy             *Strategy `protobuf:"bytes,1,opt,name=Strategy,proto3" json:"Strategy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *UpdateStrategyReq) Reset()         { *m = UpdateStrategyReq{} }
func (m *UpdateStrategyReq) String() string { return proto.CompactTextString(m) }
func (*UpdateStrategyReq) ProtoMessage()    {}
func (*UpdateStrategyReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a9cfd4cb1c623bb, []int{5}
}

func (m *UpdateStrategyReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateStrategyReq.Unmarshal(m, b)
}
func (m *UpdateStrategyReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateStrategyReq.Marshal(b, m, deterministic)
}
func (m *UpdateStrategyReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateStrategyReq.Merge(m, src)
}
func (m *UpdateStrategyReq) XXX_Size() int {
	return xxx_messageInfo_UpdateStrategyReq.Size(m)
}
func (m *UpdateStrategyReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateStrategyReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateStrategyReq proto.InternalMessageInfo

func (m *UpdateStrategyReq) GetStrategy() *Strategy {
	if m != nil {
		return m.Strategy
	}
	return nil
}

type UpdateStrategyRes struct {
	Strategy             *Strategy `protobuf:"bytes,1,opt,name=Strategy,proto3" json:"Strategy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *UpdateStrategyRes) Reset()         { *m = UpdateStrategyRes{} }
func (m *UpdateStrategyRes) String() string { return proto.CompactTextString(m) }
func (*UpdateStrategyRes) ProtoMessage()    {}
func (*UpdateStrategyRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a9cfd4cb1c623bb, []int{6}
}

func (m *UpdateStrategyRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateStrategyRes.Unmarshal(m, b)
}
func (m *UpdateStrategyRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateStrategyRes.Marshal(b, m, deterministic)
}
func (m *UpdateStrategyRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateStrategyRes.Merge(m, src)
}
func (m *UpdateStrategyRes) XXX_Size() int {
	return xxx_messageInfo_UpdateStrategyRes.Size(m)
}
func (m *UpdateStrategyRes) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateStrategyRes.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateStrategyRes proto.InternalMessageInfo

func (m *UpdateStrategyRes) GetStrategy() *Strategy {
	if m != nil {
		return m.Strategy
	}
	return nil
}

type ReadStrategyReq struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadStrategyReq) Reset()         { *m = ReadStrategyReq{} }
func (m *ReadStrategyReq) String() string { return proto.CompactTextString(m) }
func (*ReadStrategyReq) ProtoMessage()    {}
func (*ReadStrategyReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a9cfd4cb1c623bb, []int{7}
}

func (m *ReadStrategyReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadStrategyReq.Unmarshal(m, b)
}
func (m *ReadStrategyReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadStrategyReq.Marshal(b, m, deterministic)
}
func (m *ReadStrategyReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadStrategyReq.Merge(m, src)
}
func (m *ReadStrategyReq) XXX_Size() int {
	return xxx_messageInfo_ReadStrategyReq.Size(m)
}
func (m *ReadStrategyReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadStrategyReq.DiscardUnknown(m)
}

var xxx_messageInfo_ReadStrategyReq proto.InternalMessageInfo

func (m *ReadStrategyReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ReadStrategyRes struct {
	Strategy             *Strategy `protobuf:"bytes,1,opt,name=Strategy,proto3" json:"Strategy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ReadStrategyRes) Reset()         { *m = ReadStrategyRes{} }
func (m *ReadStrategyRes) String() string { return proto.CompactTextString(m) }
func (*ReadStrategyRes) ProtoMessage()    {}
func (*ReadStrategyRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a9cfd4cb1c623bb, []int{8}
}

func (m *ReadStrategyRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadStrategyRes.Unmarshal(m, b)
}
func (m *ReadStrategyRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadStrategyRes.Marshal(b, m, deterministic)
}
func (m *ReadStrategyRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadStrategyRes.Merge(m, src)
}
func (m *ReadStrategyRes) XXX_Size() int {
	return xxx_messageInfo_ReadStrategyRes.Size(m)
}
func (m *ReadStrategyRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadStrategyRes.DiscardUnknown(m)
}

var xxx_messageInfo_ReadStrategyRes proto.InternalMessageInfo

func (m *ReadStrategyRes) GetStrategy() *Strategy {
	if m != nil {
		return m.Strategy
	}
	return nil
}

type DeleteStrategyReq struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteStrategyReq) Reset()         { *m = DeleteStrategyReq{} }
func (m *DeleteStrategyReq) String() string { return proto.CompactTextString(m) }
func (*DeleteStrategyReq) ProtoMessage()    {}
func (*DeleteStrategyReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a9cfd4cb1c623bb, []int{9}
}

func (m *DeleteStrategyReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteStrategyReq.Unmarshal(m, b)
}
func (m *DeleteStrategyReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteStrategyReq.Marshal(b, m, deterministic)
}
func (m *DeleteStrategyReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteStrategyReq.Merge(m, src)
}
func (m *DeleteStrategyReq) XXX_Size() int {
	return xxx_messageInfo_DeleteStrategyReq.Size(m)
}
func (m *DeleteStrategyReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteStrategyReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteStrategyReq proto.InternalMessageInfo

func (m *DeleteStrategyReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DeleteStrategyRes struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteStrategyRes) Reset()         { *m = DeleteStrategyRes{} }
func (m *DeleteStrategyRes) String() string { return proto.CompactTextString(m) }
func (*DeleteStrategyRes) ProtoMessage()    {}
func (*DeleteStrategyRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a9cfd4cb1c623bb, []int{10}
}

func (m *DeleteStrategyRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteStrategyRes.Unmarshal(m, b)
}
func (m *DeleteStrategyRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteStrategyRes.Marshal(b, m, deterministic)
}
func (m *DeleteStrategyRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteStrategyRes.Merge(m, src)
}
func (m *DeleteStrategyRes) XXX_Size() int {
	return xxx_messageInfo_DeleteStrategyRes.Size(m)
}
func (m *DeleteStrategyRes) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteStrategyRes.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteStrategyRes proto.InternalMessageInfo

func (m *DeleteStrategyRes) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type ListStrategyReq struct {
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListStrategyReq) Reset()         { *m = ListStrategyReq{} }
func (m *ListStrategyReq) String() string { return proto.CompactTextString(m) }
func (*ListStrategyReq) ProtoMessage()    {}
func (*ListStrategyReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a9cfd4cb1c623bb, []int{11}
}

func (m *ListStrategyReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListStrategyReq.Unmarshal(m, b)
}
func (m *ListStrategyReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListStrategyReq.Marshal(b, m, deterministic)
}
func (m *ListStrategyReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListStrategyReq.Merge(m, src)
}
func (m *ListStrategyReq) XXX_Size() int {
	return xxx_messageInfo_ListStrategyReq.Size(m)
}
func (m *ListStrategyReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListStrategyReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListStrategyReq proto.InternalMessageInfo

func (m *ListStrategyReq) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type ListStrategyRes struct {
	Strategy             *Strategy `protobuf:"bytes,1,opt,name=Strategy,proto3" json:"Strategy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ListStrategyRes) Reset()         { *m = ListStrategyRes{} }
func (m *ListStrategyRes) String() string { return proto.CompactTextString(m) }
func (*ListStrategyRes) ProtoMessage()    {}
func (*ListStrategyRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a9cfd4cb1c623bb, []int{12}
}

func (m *ListStrategyRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListStrategyRes.Unmarshal(m, b)
}
func (m *ListStrategyRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListStrategyRes.Marshal(b, m, deterministic)
}
func (m *ListStrategyRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListStrategyRes.Merge(m, src)
}
func (m *ListStrategyRes) XXX_Size() int {
	return xxx_messageInfo_ListStrategyRes.Size(m)
}
func (m *ListStrategyRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ListStrategyRes.DiscardUnknown(m)
}

var xxx_messageInfo_ListStrategyRes proto.InternalMessageInfo

func (m *ListStrategyRes) GetStrategy() *Strategy {
	if m != nil {
		return m.Strategy
	}
	return nil
}

type StartBotReq struct {
	StrategyId           string   `protobuf:"bytes,1,opt,name=strategy_id,json=strategyId,proto3" json:"strategy_id,omitempty"`
	Stocks               *Stock   `protobuf:"bytes,2,opt,name=stocks,proto3" json:"stocks,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartBotReq) Reset()         { *m = StartBotReq{} }
func (m *StartBotReq) String() string { return proto.CompactTextString(m) }
func (*StartBotReq) ProtoMessage()    {}
func (*StartBotReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a9cfd4cb1c623bb, []int{13}
}

func (m *StartBotReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartBotReq.Unmarshal(m, b)
}
func (m *StartBotReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartBotReq.Marshal(b, m, deterministic)
}
func (m *StartBotReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartBotReq.Merge(m, src)
}
func (m *StartBotReq) XXX_Size() int {
	return xxx_messageInfo_StartBotReq.Size(m)
}
func (m *StartBotReq) XXX_DiscardUnknown() {
	xxx_messageInfo_StartBotReq.DiscardUnknown(m)
}

var xxx_messageInfo_StartBotReq proto.InternalMessageInfo

func (m *StartBotReq) GetStrategyId() string {
	if m != nil {
		return m.StrategyId
	}
	return ""
}

func (m *StartBotReq) GetStocks() *Stock {
	if m != nil {
		return m.Stocks
	}
	return nil
}

type StartBotRes struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartBotRes) Reset()         { *m = StartBotRes{} }
func (m *StartBotRes) String() string { return proto.CompactTextString(m) }
func (*StartBotRes) ProtoMessage()    {}
func (*StartBotRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a9cfd4cb1c623bb, []int{14}
}

func (m *StartBotRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartBotRes.Unmarshal(m, b)
}
func (m *StartBotRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartBotRes.Marshal(b, m, deterministic)
}
func (m *StartBotRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartBotRes.Merge(m, src)
}
func (m *StartBotRes) XXX_Size() int {
	return xxx_messageInfo_StartBotRes.Size(m)
}
func (m *StartBotRes) XXX_DiscardUnknown() {
	xxx_messageInfo_StartBotRes.DiscardUnknown(m)
}

var xxx_messageInfo_StartBotRes proto.InternalMessageInfo

func (m *StartBotRes) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type Deal struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	StrategyId           string   `protobuf:"bytes,2,opt,name=strategy_id,json=strategyId,proto3" json:"strategy_id,omitempty"`
	Version              int64    `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Stock                string   `protobuf:"bytes,4,opt,name=stock,proto3" json:"stock,omitempty"`
	UserId               string   `protobuf:"bytes,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Deal) Reset()         { *m = Deal{} }
func (m *Deal) String() string { return proto.CompactTextString(m) }
func (*Deal) ProtoMessage()    {}
func (*Deal) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a9cfd4cb1c623bb, []int{15}
}

func (m *Deal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Deal.Unmarshal(m, b)
}
func (m *Deal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Deal.Marshal(b, m, deterministic)
}
func (m *Deal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Deal.Merge(m, src)
}
func (m *Deal) XXX_Size() int {
	return xxx_messageInfo_Deal.Size(m)
}
func (m *Deal) XXX_DiscardUnknown() {
	xxx_messageInfo_Deal.DiscardUnknown(m)
}

var xxx_messageInfo_Deal proto.InternalMessageInfo

func (m *Deal) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Deal) GetStrategyId() string {
	if m != nil {
		return m.StrategyId
	}
	return ""
}

func (m *Deal) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *Deal) GetStock() string {
	if m != nil {
		return m.Stock
	}
	return ""
}

func (m *Deal) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func init() {
	proto.RegisterType((*Strategy)(nil), "strategy.Strategy")
	proto.RegisterType((*Stock)(nil), "strategy.Stock")
	proto.RegisterType((*StrategyRevision)(nil), "strategy.StrategyRevision")
	proto.RegisterType((*CreateStrategyReq)(nil), "strategy.CreateStrategyReq")
	proto.RegisterType((*CreateStrategyRes)(nil), "strategy.CreateStrategyRes")
	proto.RegisterType((*UpdateStrategyReq)(nil), "strategy.UpdateStrategyReq")
	proto.RegisterType((*UpdateStrategyRes)(nil), "strategy.UpdateStrategyRes")
	proto.RegisterType((*ReadStrategyReq)(nil), "strategy.ReadStrategyReq")
	proto.RegisterType((*ReadStrategyRes)(nil), "strategy.ReadStrategyRes")
	proto.RegisterType((*DeleteStrategyReq)(nil), "strategy.DeleteStrategyReq")
	proto.RegisterType((*DeleteStrategyRes)(nil), "strategy.DeleteStrategyRes")
	proto.RegisterType((*ListStrategyReq)(nil), "strategy.ListStrategyReq")
	proto.RegisterType((*ListStrategyRes)(nil), "strategy.ListStrategyRes")
	proto.RegisterType((*StartBotReq)(nil), "strategy.StartBotReq")
	proto.RegisterType((*StartBotRes)(nil), "strategy.StartBotRes")
	proto.RegisterType((*Deal)(nil), "strategy.Deal")
}

func init() {
	proto.RegisterFile("proto/strategy.proto", fileDescriptor_8a9cfd4cb1c623bb)
}

var fileDescriptor_8a9cfd4cb1c623bb = []byte{
	// 815 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x56, 0xdd, 0x4e, 0xf3, 0x46,
	0x10, 0x95, 0x13, 0x12, 0xc2, 0xe4, 0x7f, 0x9b, 0x82, 0x49, 0x55, 0x35, 0x0d, 0x02, 0x22, 0xaa,
	0x02, 0xa2, 0xaa, 0xd4, 0xaa, 0x57, 0x40, 0x5a, 0x95, 0xaa, 0x6a, 0xab, 0x98, 0xb6, 0x52, 0x6f,
	0xac, 0xc5, 0x1e, 0xa8, 0x85, 0x13, 0xbb, 0xde, 0x4d, 0x44, 0xb8, 0xe2, 0x75, 0xfa, 0x14, 0x7d,
	0xb5, 0x6a, 0xc7, 0x76, 0xb2, 0x76, 0x20, 0xfa, 0xf8, 0x6e, 0x3f, 0x2e, 0xe7, 0x9c, 0xb3, 0xe3,
	0x19, 0xfb, 0x9c, 0x4d, 0xa0, 0x13, 0x46, 0x81, 0x0c, 0x4e, 0x84, 0x8c, 0xb8, 0xc4, 0xbb, 0xf9,
	0x31, 0x95, 0xac, 0x92, 0xd6, 0xfd, 0xa7, 0x32, 0x54, 0xac, 0xa4, 0x60, 0x0d, 0x28, 0x78, 0xae,
	0x69, 0xf4, 0x8c, 0xc1, 0xd6, 0xa8, 0xe0, 0xb9, 0x6c, 0x0f, 0xea, 0xa9, 0xd0, 0x9e, 0xf0, 0x31,
	0x9a, 0x05, 0xa2, 0x6a, 0x29, 0xf8, 0x0b, 0x1f, 0x23, 0xfb, 0x02, 0xda, 0x02, 0x7d, 0x74, 0x24,
	0xba, 0x36, 0x3e, 0x38, 0x7f, 0xf3, 0xc9, 0x1d, 0x9a, 0x45, 0x12, 0xb6, 0x52, 0xe2, 0xfb, 0x04,
	0xcf, 0x74, 0x94, 0xf3, 0x10, 0xcd, 0x8d, 0x6c, 0xc7, 0xeb, 0x79, 0x88, 0x6c, 0x00, 0x2d, 0x21,
	0x79, 0x24, 0xed, 0x20, 0x72, 0x31, 0x8a, 0x75, 0x25, 0xd2, 0x35, 0x08, 0xff, 0x55, 0xc1, 0xa4,
	0x3c, 0x85, 0x8e, 0x8b, 0xdc, 0xb7, 0x63, 0xb9, 0x13, 0x4c, 0x5c, 0x4f, 0x7a, 0xc1, 0xc4, 0x2c,
	0x93, 0x9a, 0x29, 0xce, 0x52, 0xd4, 0x65, 0xca, 0xb0, 0x03, 0x68, 0xde, 0x70, 0x81, 0x49, 0x6b,
	0xe1, 0x3d, 0xa2, 0xb9, 0xd9, 0x33, 0x06, 0xc6, 0xa8, 0xae, 0x60, 0xea, 0x6c, 0x79, 0x8f, 0xc8,
	0x8e, 0xa0, 0x2d, 0xf8, 0x2d, 0xca, 0xb9, 0xae, 0xac, 0x90, 0xb2, 0x19, 0x13, 0x4b, 0xed, 0x09,
	0x74, 0xc6, 0xfc, 0xc1, 0x4e, 0xf4, 0x32, 0xe2, 0x2e, 0xda, 0xdc, 0x71, 0xcc, 0x2d, 0x9a, 0xa2,
	0x3d, 0xe6, 0x0f, 0x16, 0x51, 0xd7, 0x8a, 0x39, 0x77, 0x1c, 0xb6, 0x0f, 0x8d, 0x30, 0xf2, 0x1c,
	0xb4, 0x5d, 0x9c, 0x71, 0x1a, 0x18, 0x48, 0x5a, 0x27, 0x74, 0x98, 0x80, 0xec, 0x5b, 0xd8, 0xcd,
	0xcc, 0x30, 0x0b, 0xfc, 0xe9, 0x18, 0x6d, 0xe1, 0x70, 0x1f, 0xcd, 0x2a, 0x9d, 0xd8, 0xd6, 0x66,
	0xf9, 0x83, 0x68, 0x4b, 0xb1, 0xec, 0x6b, 0xd8, 0xc9, 0x8e, 0x2f, 0x31, 0x4c, 0x0e, 0xd6, 0xe8,
	0x60, 0x47, 0x5f, 0x42, 0x62, 0x18, 0x1f, 0xfb, 0x0c, 0xaa, 0x92, 0xdf, 0xa3, 0x1d, 0x46, 0xc1,
	0xad, 0x27, 0xcd, 0x3a, 0x49, 0x41, 0x41, 0xbf, 0x11, 0xa2, 0xbe, 0x9f, 0xe4, 0xd1, 0x1d, 0xca,
	0x54, 0xd2, 0x88, 0xbf, 0x5f, 0x0c, 0x26, 0xa2, 0xef, 0xa0, 0xcb, 0x7d, 0x3f, 0x70, 0xb8, 0x44,
	0xfb, 0x76, 0x3a, 0x71, 0x85, 0x2d, 0x03, 0x3b, 0xfd, 0xc2, 0x66, 0x93, 0x4e, 0xec, 0xa4, 0x8a,
	0x1f, 0x94, 0xe0, 0x3a, 0x58, 0x78, 0x70, 0x07, 0x36, 0xa7, 0x02, 0x23, 0xdb, 0x73, 0xcd, 0x16,
	0x29, 0xcb, 0xaa, 0xbc, 0x72, 0x99, 0x09, 0x9b, 0x33, 0x8c, 0x84, 0x7a, 0x5b, 0xed, 0x9e, 0x31,
	0x28, 0x8e, 0xd2, 0x92, 0x6d, 0x43, 0x59, 0x48, 0x2e, 0xa7, 0xc2, 0x64, 0xf1, 0x89, 0xb8, 0x62,
	0xfb, 0x50, 0x12, 0x32, 0x70, 0xee, 0xcd, 0x8f, 0x7a, 0xc5, 0x41, 0xf5, 0xac, 0x79, 0xbc, 0x48,
	0x81, 0xa5, 0xe0, 0x51, 0xcc, 0xf6, 0x0f, 0xa0, 0x44, 0x35, 0xfb, 0x14, 0x80, 0x90, 0xd8, 0xeb,
	0x71, 0x0c, 0xb6, 0x08, 0x51, 0x46, 0xef, 0xff, 0x5b, 0x86, 0x56, 0x3a, 0xe6, 0x08, 0x67, 0x1e,
	0x3d, 0xfb, 0x2d, 0x32, 0x6f, 0x91, 0xf9, 0xe0, 0x22, 0xa3, 0x96, 0x5e, 0x78, 0xd2, 0x73, 0xcd,
	0x4e, 0xbc, 0x74, 0x0a, 0x5d, 0xb9, 0xfd, 0x4b, 0x68, 0x5f, 0x46, 0xc8, 0x25, 0x2e, 0x03, 0xf3,
	0x0f, 0x3b, 0x86, 0xc5, 0xef, 0x0e, 0x25, 0xa6, 0x7a, 0xc6, 0xf4, 0xfe, 0x89, 0x70, 0xf9, 0xdb,
	0xf4, 0x4c, 0x13, 0xf1, 0x3e, 0x4d, 0x7e, 0x0f, 0xdd, 0xd5, 0x49, 0xac, 0x77, 0x68, 0x62, 0xad,
	0x69, 0x22, 0x5e, 0xdd, 0xe4, 0x73, 0x68, 0x8e, 0x90, 0xbb, 0xfa, 0x1c, 0xb9, 0xdb, 0xa3, 0x7f,
	0x9e, 0x97, 0xbc, 0xfe, 0x29, 0x7b, 0xd0, 0x1e, 0xa2, 0x8f, 0xd9, 0x7d, 0xf3, 0xcf, 0xf9, 0x72,
	0x55, 0x24, 0x94, 0x5b, 0xc4, 0xd4, 0x71, 0x50, 0x08, 0x52, 0x56, 0x46, 0x69, 0xd9, 0x3f, 0x82,
	0xe6, 0xcf, 0x9e, 0x90, 0x7a, 0x47, 0xcd, 0x73, 0x86, 0xee, 0x39, 0xb5, 0x42, 0x56, 0xfb, 0xfa,
	0x15, 0xfe, 0x84, 0x2a, 0x5d, 0x41, 0x17, 0x81, 0x54, 0x8f, 0xca, 0x99, 0xcd, 0xc8, 0x9b, 0x8d,
	0x1d, 0x2a, 0x33, 0x07, 0xce, 0xbd, 0xa0, 0xcb, 0xf6, 0x19, 0xd7, 0x26, 0x74, 0xff, 0x50, 0x6f,
	0xbc, 0x6e, 0xe1, 0x27, 0x03, 0x36, 0x86, 0xc8, 0xfd, 0x95, 0xeb, 0x3d, 0x37, 0x4b, 0x61, 0x65,
	0x16, 0x2d, 0x72, 0xc5, 0x6c, 0xe4, 0x3a, 0x69, 0xb4, 0xe2, 0xfb, 0x3b, 0x49, 0x92, 0xf6, 0x1e,
	0x4b, 0xfa, 0x7b, 0x3c, 0xfb, 0xaf, 0x08, 0xcd, 0xf4, 0x8d, 0x58, 0x18, 0xcd, 0x3c, 0x07, 0xd9,
	0x4f, 0xd0, 0xc8, 0x06, 0x82, 0x7d, 0xb2, 0x5c, 0x75, 0x25, 0x6f, 0xdd, 0x35, 0xa4, 0x60, 0x43,
	0xa8, 0xe9, 0x56, 0x63, 0xbb, 0x4b, 0x71, 0xce, 0xa5, 0xdd, 0x17, 0x29, 0xa1, 0x26, 0xca, 0x06,
	0x43, 0x9f, 0x68, 0x25, 0x77, 0xdd, 0x35, 0x24, 0xf5, 0xca, 0x9a, 0x52, 0xef, 0xb5, 0xe2, 0xe9,
	0xee, 0x1a, 0x52, 0xb0, 0x1f, 0xa1, 0xa1, 0xb9, 0xd0, 0x43, 0xa1, 0xef, 0x97, 0xf3, 0x72, 0xf7,
	0x45, 0x4a, 0x9c, 0x1a, 0xec, 0x1b, 0x65, 0xde, 0xd8, 0x33, 0xec, 0x63, 0xdd, 0x58, 0x0b, 0x83,
	0x76, 0x9f, 0x85, 0xc5, 0x45, 0xed, 0xaf, 0x85, 0x31, 0xc2, 0x9b, 0x9b, 0x32, 0xfd, 0xf3, 0xfe,
	0xea, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0x1c, 0xa7, 0x27, 0xe2, 0x91, 0x0b, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// StrategyServiceClient is the client API for StrategyService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StrategyServiceClient interface {
	CreateStrategy(ctx context.Context, in *CreateStrategyReq, opts ...grpc.CallOption) (*CreateStrategyRes, error)
	ReadStrategy(ctx context.Context, in *ReadStrategyReq, opts ...grpc.CallOption) (*ReadStrategyRes, error)
	UpdateStrategy(ctx context.Context, in *UpdateStrategyReq, opts ...grpc.CallOption) (*UpdateStrategyRes, error)
	DeleteStrategy(ctx context.Context, in *DeleteStrategyReq, opts ...grpc.CallOption) (*DeleteStrategyRes, error)
	ListStrategies(ctx context.Context, in *ListStrategyReq, opts ...grpc.CallOption) (StrategyService_ListStrategiesClient, error)
	StartBot(ctx context.Context, in *StartBotReq, opts ...grpc.CallOption) (*StartBotRes, error)
}

type strategyServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewStrategyServiceClient(cc grpc.ClientConnInterface) StrategyServiceClient {
	return &strategyServiceClient{cc}
}

func (c *strategyServiceClient) CreateStrategy(ctx context.Context, in *CreateStrategyReq, opts ...grpc.CallOption) (*CreateStrategyRes, error) {
	out := new(CreateStrategyRes)
	err := c.cc.Invoke(ctx, "/strategy.StrategyService/CreateStrategy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *strategyServiceClient) ReadStrategy(ctx context.Context, in *ReadStrategyReq, opts ...grpc.CallOption) (*ReadStrategyRes, error) {
	out := new(ReadStrategyRes)
	err := c.cc.Invoke(ctx, "/strategy.StrategyService/ReadStrategy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *strategyServiceClient) UpdateStrategy(ctx context.Context, in *UpdateStrategyReq, opts ...grpc.CallOption) (*UpdateStrategyRes, error) {
	out := new(UpdateStrategyRes)
	err := c.cc.Invoke(ctx, "/strategy.StrategyService/UpdateStrategy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *strategyServiceClient) DeleteStrategy(ctx context.Context, in *DeleteStrategyReq, opts ...grpc.CallOption) (*DeleteStrategyRes, error) {
	out := new(DeleteStrategyRes)
	err := c.cc.Invoke(ctx, "/strategy.StrategyService/DeleteStrategy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *strategyServiceClient) ListStrategies(ctx context.Context, in *ListStrategyReq, opts ...grpc.CallOption) (StrategyService_ListStrategiesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_StrategyService_serviceDesc.Streams[0], "/strategy.StrategyService/ListStrategies", opts...)
	if err != nil {
		return nil, err
	}
	x := &strategyServiceListStrategiesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type StrategyService_ListStrategiesClient interface {
	Recv() (*ListStrategyRes, error)
	grpc.ClientStream
}

type strategyServiceListStrategiesClient struct {
	grpc.ClientStream
}

func (x *strategyServiceListStrategiesClient) Recv() (*ListStrategyRes, error) {
	m := new(ListStrategyRes)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *strategyServiceClient) StartBot(ctx context.Context, in *StartBotReq, opts ...grpc.CallOption) (*StartBotRes, error) {
	out := new(StartBotRes)
	err := c.cc.Invoke(ctx, "/strategy.StrategyService/StartBot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StrategyServiceServer is the server API for StrategyService service.
type StrategyServiceServer interface {
	CreateStrategy(context.Context, *CreateStrategyReq) (*CreateStrategyRes, error)
	ReadStrategy(context.Context, *ReadStrategyReq) (*ReadStrategyRes, error)
	UpdateStrategy(context.Context, *UpdateStrategyReq) (*UpdateStrategyRes, error)
	DeleteStrategy(context.Context, *DeleteStrategyReq) (*DeleteStrategyRes, error)
	ListStrategies(*ListStrategyReq, StrategyService_ListStrategiesServer) error
	StartBot(context.Context, *StartBotReq) (*StartBotRes, error)
}

// UnimplementedStrategyServiceServer can be embedded to have forward compatible implementations.
type UnimplementedStrategyServiceServer struct {
}

func (*UnimplementedStrategyServiceServer) CreateStrategy(ctx context.Context, req *CreateStrategyReq) (*CreateStrategyRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateStrategy not implemented")
}
func (*UnimplementedStrategyServiceServer) ReadStrategy(ctx context.Context, req *ReadStrategyReq) (*ReadStrategyRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadStrategy not implemented")
}
func (*UnimplementedStrategyServiceServer) UpdateStrategy(ctx context.Context, req *UpdateStrategyReq) (*UpdateStrategyRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateStrategy not implemented")
}
func (*UnimplementedStrategyServiceServer) DeleteStrategy(ctx context.Context, req *DeleteStrategyReq) (*DeleteStrategyRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteStrategy not implemented")
}
func (*UnimplementedStrategyServiceServer) ListStrategies(req *ListStrategyReq, srv StrategyService_ListStrategiesServer) error {
	return status.Errorf(codes.Unimplemented, "method ListStrategies not implemented")
}
func (*UnimplementedStrategyServiceServer) StartBot(ctx context.Context, req *StartBotReq) (*StartBotRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StartBot not implemented")
}

func RegisterStrategyServiceServer(s *grpc.Server, srv StrategyServiceServer) {
	s.RegisterService(&_StrategyService_serviceDesc, srv)
}

func _StrategyService_CreateStrategy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateStrategyReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StrategyServiceServer).CreateStrategy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/strategy.StrategyService/CreateStrategy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StrategyServiceServer).CreateStrategy(ctx, req.(*CreateStrategyReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _StrategyService_ReadStrategy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadStrategyReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StrategyServiceServer).ReadStrategy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/strategy.StrategyService/ReadStrategy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StrategyServiceServer).ReadStrategy(ctx, req.(*ReadStrategyReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _StrategyService_UpdateStrategy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateStrategyReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StrategyServiceServer).UpdateStrategy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/strategy.StrategyService/UpdateStrategy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StrategyServiceServer).UpdateStrategy(ctx, req.(*UpdateStrategyReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _StrategyService_DeleteStrategy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteStrategyReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StrategyServiceServer).DeleteStrategy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/strategy.StrategyService/DeleteStrategy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StrategyServiceServer).DeleteStrategy(ctx, req.(*DeleteStrategyReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _StrategyService_ListStrategies_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListStrategyReq)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(StrategyServiceServer).ListStrategies(m, &strategyServiceListStrategiesServer{stream})
}

type StrategyService_ListStrategiesServer interface {
	Send(*ListStrategyRes) error
	grpc.ServerStream
}

type strategyServiceListStrategiesServer struct {
	grpc.ServerStream
}

func (x *strategyServiceListStrategiesServer) Send(m *ListStrategyRes) error {
	return x.ServerStream.SendMsg(m)
}

func _StrategyService_StartBot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartBotReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StrategyServiceServer).StartBot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/strategy.StrategyService/StartBot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StrategyServiceServer).StartBot(ctx, req.(*StartBotReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _StrategyService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "strategy.StrategyService",
	HandlerType: (*StrategyServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateStrategy",
			Handler:    _StrategyService_CreateStrategy_Handler,
		},
		{
			MethodName: "ReadStrategy",
			Handler:    _StrategyService_ReadStrategy_Handler,
		},
		{
			MethodName: "UpdateStrategy",
			Handler:    _StrategyService_UpdateStrategy_Handler,
		},
		{
			MethodName: "DeleteStrategy",
			Handler:    _StrategyService_DeleteStrategy_Handler,
		},
		{
			MethodName: "StartBot",
			Handler:    _StrategyService_StartBot_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListStrategies",
			Handler:       _StrategyService_ListStrategies_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "proto/strategy.proto",
}
