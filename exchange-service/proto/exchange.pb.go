// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/exchange.proto

package exchangepb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Exchange struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	SelectedExchange     string   `protobuf:"bytes,2,opt,name=selected_exchange,json=selectedExchange,proto3" json:"selected_exchange,omitempty"`
	ExchangeName         string   `protobuf:"bytes,3,opt,name=exchange_name,json=exchangeName,proto3" json:"exchange_name,omitempty"`
	ExchangeType         string   `protobuf:"bytes,4,opt,name=exchange_type,json=exchangeType,proto3" json:"exchange_type,omitempty"`
	UserId               string   `protobuf:"bytes,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ApiKey               string   `protobuf:"bytes,6,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
	ApiSecret            string   `protobuf:"bytes,7,opt,name=api_secret,json=apiSecret,proto3" json:"api_secret,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Exchange) Reset()         { *m = Exchange{} }
func (m *Exchange) String() string { return proto.CompactTextString(m) }
func (*Exchange) ProtoMessage()    {}
func (*Exchange) Descriptor() ([]byte, []int) {
	return fileDescriptor_95588e2623cfabeb, []int{0}
}

func (m *Exchange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Exchange.Unmarshal(m, b)
}
func (m *Exchange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Exchange.Marshal(b, m, deterministic)
}
func (m *Exchange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Exchange.Merge(m, src)
}
func (m *Exchange) XXX_Size() int {
	return xxx_messageInfo_Exchange.Size(m)
}
func (m *Exchange) XXX_DiscardUnknown() {
	xxx_messageInfo_Exchange.DiscardUnknown(m)
}

var xxx_messageInfo_Exchange proto.InternalMessageInfo

func (m *Exchange) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Exchange) GetSelectedExchange() string {
	if m != nil {
		return m.SelectedExchange
	}
	return ""
}

func (m *Exchange) GetExchangeName() string {
	if m != nil {
		return m.ExchangeName
	}
	return ""
}

func (m *Exchange) GetExchangeType() string {
	if m != nil {
		return m.ExchangeType
	}
	return ""
}

func (m *Exchange) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *Exchange) GetApiKey() string {
	if m != nil {
		return m.ApiKey
	}
	return ""
}

func (m *Exchange) GetApiSecret() string {
	if m != nil {
		return m.ApiSecret
	}
	return ""
}

type ExchangeAccountInfo struct {
	Id                    string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AccountNumber         string   `protobuf:"bytes,2,opt,name=account_number,json=accountNumber,proto3" json:"account_number,omitempty"`
	CreatedAt             string   `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Status                string   `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	Currency              string   `protobuf:"bytes,5,opt,name=currency,proto3" json:"currency,omitempty"`
	Cash                  float64  `protobuf:"fixed64,6,opt,name=cash,proto3" json:"cash,omitempty"`
	CashWithdrawable      float64  `protobuf:"fixed64,7,opt,name=cash_withdrawable,json=cashWithdrawable,proto3" json:"cash_withdrawable,omitempty"`
	TradingBlocked        bool     `protobuf:"varint,8,opt,name=trading_blocked,json=tradingBlocked,proto3" json:"trading_blocked,omitempty"`
	TransfersBlocked      bool     `protobuf:"varint,9,opt,name=transfers_blocked,json=transfersBlocked,proto3" json:"transfers_blocked,omitempty"`
	AccountBlocked        bool     `protobuf:"varint,10,opt,name=account_blocked,json=accountBlocked,proto3" json:"account_blocked,omitempty"`
	BuyingPower           float64  `protobuf:"fixed64,11,opt,name=buying_power,json=buyingPower,proto3" json:"buying_power,omitempty"`
	PatternDayTrader      bool     `protobuf:"varint,12,opt,name=pattern_day_trader,json=patternDayTrader,proto3" json:"pattern_day_trader,omitempty"`
	DaytradeCount         int64    `protobuf:"varint,13,opt,name=daytrade_count,json=daytradeCount,proto3" json:"daytrade_count,omitempty"`
	DaytradingBuyingPower float64  `protobuf:"fixed64,14,opt,name=daytrading_buying_power,json=daytradingBuyingPower,proto3" json:"daytrading_buying_power,omitempty"`
	RegtBuyingPower       float64  `protobuf:"fixed64,15,opt,name=regt_buying_power,json=regtBuyingPower,proto3" json:"regt_buying_power,omitempty"`
	Equity                float64  `protobuf:"fixed64,16,opt,name=equity,proto3" json:"equity,omitempty"`
	LastEquity            float64  `protobuf:"fixed64,17,opt,name=last_equity,json=lastEquity,proto3" json:"last_equity,omitempty"`
	InitialMargin         float64  `protobuf:"fixed64,18,opt,name=initial_margin,json=initialMargin,proto3" json:"initial_margin,omitempty"`
	LongMarketValue       float64  `protobuf:"fixed64,19,opt,name=long_market_value,json=longMarketValue,proto3" json:"long_market_value,omitempty"`
	ShortMarketValue      float64  `protobuf:"fixed64,20,opt,name=short_market_value,json=shortMarketValue,proto3" json:"short_market_value,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *ExchangeAccountInfo) Reset()         { *m = ExchangeAccountInfo{} }
func (m *ExchangeAccountInfo) String() string { return proto.CompactTextString(m) }
func (*ExchangeAccountInfo) ProtoMessage()    {}
func (*ExchangeAccountInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_95588e2623cfabeb, []int{1}
}

func (m *ExchangeAccountInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExchangeAccountInfo.Unmarshal(m, b)
}
func (m *ExchangeAccountInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExchangeAccountInfo.Marshal(b, m, deterministic)
}
func (m *ExchangeAccountInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExchangeAccountInfo.Merge(m, src)
}
func (m *ExchangeAccountInfo) XXX_Size() int {
	return xxx_messageInfo_ExchangeAccountInfo.Size(m)
}
func (m *ExchangeAccountInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ExchangeAccountInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ExchangeAccountInfo proto.InternalMessageInfo

func (m *ExchangeAccountInfo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ExchangeAccountInfo) GetAccountNumber() string {
	if m != nil {
		return m.AccountNumber
	}
	return ""
}

func (m *ExchangeAccountInfo) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *ExchangeAccountInfo) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *ExchangeAccountInfo) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *ExchangeAccountInfo) GetCash() float64 {
	if m != nil {
		return m.Cash
	}
	return 0
}

func (m *ExchangeAccountInfo) GetCashWithdrawable() float64 {
	if m != nil {
		return m.CashWithdrawable
	}
	return 0
}

func (m *ExchangeAccountInfo) GetTradingBlocked() bool {
	if m != nil {
		return m.TradingBlocked
	}
	return false
}

func (m *ExchangeAccountInfo) GetTransfersBlocked() bool {
	if m != nil {
		return m.TransfersBlocked
	}
	return false
}

func (m *ExchangeAccountInfo) GetAccountBlocked() bool {
	if m != nil {
		return m.AccountBlocked
	}
	return false
}

func (m *ExchangeAccountInfo) GetBuyingPower() float64 {
	if m != nil {
		return m.BuyingPower
	}
	return 0
}

func (m *ExchangeAccountInfo) GetPatternDayTrader() bool {
	if m != nil {
		return m.PatternDayTrader
	}
	return false
}

func (m *ExchangeAccountInfo) GetDaytradeCount() int64 {
	if m != nil {
		return m.DaytradeCount
	}
	return 0
}

func (m *ExchangeAccountInfo) GetDaytradingBuyingPower() float64 {
	if m != nil {
		return m.DaytradingBuyingPower
	}
	return 0
}

func (m *ExchangeAccountInfo) GetRegtBuyingPower() float64 {
	if m != nil {
		return m.RegtBuyingPower
	}
	return 0
}

func (m *ExchangeAccountInfo) GetEquity() float64 {
	if m != nil {
		return m.Equity
	}
	return 0
}

func (m *ExchangeAccountInfo) GetLastEquity() float64 {
	if m != nil {
		return m.LastEquity
	}
	return 0
}

func (m *ExchangeAccountInfo) GetInitialMargin() float64 {
	if m != nil {
		return m.InitialMargin
	}
	return 0
}

func (m *ExchangeAccountInfo) GetLongMarketValue() float64 {
	if m != nil {
		return m.LongMarketValue
	}
	return 0
}

func (m *ExchangeAccountInfo) GetShortMarketValue() float64 {
	if m != nil {
		return m.ShortMarketValue
	}
	return 0
}

type CreateExchangeReq struct {
	Exchange             *Exchange `protobuf:"bytes,1,opt,name=exchange,proto3" json:"exchange,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *CreateExchangeReq) Reset()         { *m = CreateExchangeReq{} }
func (m *CreateExchangeReq) String() string { return proto.CompactTextString(m) }
func (*CreateExchangeReq) ProtoMessage()    {}
func (*CreateExchangeReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_95588e2623cfabeb, []int{2}
}

func (m *CreateExchangeReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateExchangeReq.Unmarshal(m, b)
}
func (m *CreateExchangeReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateExchangeReq.Marshal(b, m, deterministic)
}
func (m *CreateExchangeReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateExchangeReq.Merge(m, src)
}
func (m *CreateExchangeReq) XXX_Size() int {
	return xxx_messageInfo_CreateExchangeReq.Size(m)
}
func (m *CreateExchangeReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateExchangeReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateExchangeReq proto.InternalMessageInfo

func (m *CreateExchangeReq) GetExchange() *Exchange {
	if m != nil {
		return m.Exchange
	}
	return nil
}

type CreateExchangeRes struct {
	Exchange             *Exchange            `protobuf:"bytes,1,opt,name=exchange,proto3" json:"exchange,omitempty"`
	ExchangeAccountInfo  *ExchangeAccountInfo `protobuf:"bytes,2,opt,name=exchangeAccountInfo,proto3" json:"exchangeAccountInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CreateExchangeRes) Reset()         { *m = CreateExchangeRes{} }
func (m *CreateExchangeRes) String() string { return proto.CompactTextString(m) }
func (*CreateExchangeRes) ProtoMessage()    {}
func (*CreateExchangeRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_95588e2623cfabeb, []int{3}
}

func (m *CreateExchangeRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateExchangeRes.Unmarshal(m, b)
}
func (m *CreateExchangeRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateExchangeRes.Marshal(b, m, deterministic)
}
func (m *CreateExchangeRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateExchangeRes.Merge(m, src)
}
func (m *CreateExchangeRes) XXX_Size() int {
	return xxx_messageInfo_CreateExchangeRes.Size(m)
}
func (m *CreateExchangeRes) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateExchangeRes.DiscardUnknown(m)
}

var xxx_messageInfo_CreateExchangeRes proto.InternalMessageInfo

func (m *CreateExchangeRes) GetExchange() *Exchange {
	if m != nil {
		return m.Exchange
	}
	return nil
}

func (m *CreateExchangeRes) GetExchangeAccountInfo() *ExchangeAccountInfo {
	if m != nil {
		return m.ExchangeAccountInfo
	}
	return nil
}

type UpdateExchangeReq struct {
	Exchange             *Exchange `protobuf:"bytes,1,opt,name=exchange,proto3" json:"exchange,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *UpdateExchangeReq) Reset()         { *m = UpdateExchangeReq{} }
func (m *UpdateExchangeReq) String() string { return proto.CompactTextString(m) }
func (*UpdateExchangeReq) ProtoMessage()    {}
func (*UpdateExchangeReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_95588e2623cfabeb, []int{4}
}

func (m *UpdateExchangeReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateExchangeReq.Unmarshal(m, b)
}
func (m *UpdateExchangeReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateExchangeReq.Marshal(b, m, deterministic)
}
func (m *UpdateExchangeReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateExchangeReq.Merge(m, src)
}
func (m *UpdateExchangeReq) XXX_Size() int {
	return xxx_messageInfo_UpdateExchangeReq.Size(m)
}
func (m *UpdateExchangeReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateExchangeReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateExchangeReq proto.InternalMessageInfo

func (m *UpdateExchangeReq) GetExchange() *Exchange {
	if m != nil {
		return m.Exchange
	}
	return nil
}

type UpdateExchangeRes struct {
	Exchange             *Exchange `protobuf:"bytes,1,opt,name=exchange,proto3" json:"exchange,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *UpdateExchangeRes) Reset()         { *m = UpdateExchangeRes{} }
func (m *UpdateExchangeRes) String() string { return proto.CompactTextString(m) }
func (*UpdateExchangeRes) ProtoMessage()    {}
func (*UpdateExchangeRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_95588e2623cfabeb, []int{5}
}

func (m *UpdateExchangeRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateExchangeRes.Unmarshal(m, b)
}
func (m *UpdateExchangeRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateExchangeRes.Marshal(b, m, deterministic)
}
func (m *UpdateExchangeRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateExchangeRes.Merge(m, src)
}
func (m *UpdateExchangeRes) XXX_Size() int {
	return xxx_messageInfo_UpdateExchangeRes.Size(m)
}
func (m *UpdateExchangeRes) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateExchangeRes.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateExchangeRes proto.InternalMessageInfo

func (m *UpdateExchangeRes) GetExchange() *Exchange {
	if m != nil {
		return m.Exchange
	}
	return nil
}

type ReadExchangeReq struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadExchangeReq) Reset()         { *m = ReadExchangeReq{} }
func (m *ReadExchangeReq) String() string { return proto.CompactTextString(m) }
func (*ReadExchangeReq) ProtoMessage()    {}
func (*ReadExchangeReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_95588e2623cfabeb, []int{6}
}

func (m *ReadExchangeReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadExchangeReq.Unmarshal(m, b)
}
func (m *ReadExchangeReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadExchangeReq.Marshal(b, m, deterministic)
}
func (m *ReadExchangeReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadExchangeReq.Merge(m, src)
}
func (m *ReadExchangeReq) XXX_Size() int {
	return xxx_messageInfo_ReadExchangeReq.Size(m)
}
func (m *ReadExchangeReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadExchangeReq.DiscardUnknown(m)
}

var xxx_messageInfo_ReadExchangeReq proto.InternalMessageInfo

func (m *ReadExchangeReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ReadExchangeRes struct {
	Exchange             *Exchange `protobuf:"bytes,1,opt,name=exchange,proto3" json:"exchange,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ReadExchangeRes) Reset()         { *m = ReadExchangeRes{} }
func (m *ReadExchangeRes) String() string { return proto.CompactTextString(m) }
func (*ReadExchangeRes) ProtoMessage()    {}
func (*ReadExchangeRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_95588e2623cfabeb, []int{7}
}

func (m *ReadExchangeRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadExchangeRes.Unmarshal(m, b)
}
func (m *ReadExchangeRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadExchangeRes.Marshal(b, m, deterministic)
}
func (m *ReadExchangeRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadExchangeRes.Merge(m, src)
}
func (m *ReadExchangeRes) XXX_Size() int {
	return xxx_messageInfo_ReadExchangeRes.Size(m)
}
func (m *ReadExchangeRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadExchangeRes.DiscardUnknown(m)
}

var xxx_messageInfo_ReadExchangeRes proto.InternalMessageInfo

func (m *ReadExchangeRes) GetExchange() *Exchange {
	if m != nil {
		return m.Exchange
	}
	return nil
}

type DeleteExchangeReq struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteExchangeReq) Reset()         { *m = DeleteExchangeReq{} }
func (m *DeleteExchangeReq) String() string { return proto.CompactTextString(m) }
func (*DeleteExchangeReq) ProtoMessage()    {}
func (*DeleteExchangeReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_95588e2623cfabeb, []int{8}
}

func (m *DeleteExchangeReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteExchangeReq.Unmarshal(m, b)
}
func (m *DeleteExchangeReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteExchangeReq.Marshal(b, m, deterministic)
}
func (m *DeleteExchangeReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteExchangeReq.Merge(m, src)
}
func (m *DeleteExchangeReq) XXX_Size() int {
	return xxx_messageInfo_DeleteExchangeReq.Size(m)
}
func (m *DeleteExchangeReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteExchangeReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteExchangeReq proto.InternalMessageInfo

func (m *DeleteExchangeReq) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DeleteExchangeRes struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteExchangeRes) Reset()         { *m = DeleteExchangeRes{} }
func (m *DeleteExchangeRes) String() string { return proto.CompactTextString(m) }
func (*DeleteExchangeRes) ProtoMessage()    {}
func (*DeleteExchangeRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_95588e2623cfabeb, []int{9}
}

func (m *DeleteExchangeRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteExchangeRes.Unmarshal(m, b)
}
func (m *DeleteExchangeRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteExchangeRes.Marshal(b, m, deterministic)
}
func (m *DeleteExchangeRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteExchangeRes.Merge(m, src)
}
func (m *DeleteExchangeRes) XXX_Size() int {
	return xxx_messageInfo_DeleteExchangeRes.Size(m)
}
func (m *DeleteExchangeRes) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteExchangeRes.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteExchangeRes proto.InternalMessageInfo

func (m *DeleteExchangeRes) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type ListExchangeReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListExchangeReq) Reset()         { *m = ListExchangeReq{} }
func (m *ListExchangeReq) String() string { return proto.CompactTextString(m) }
func (*ListExchangeReq) ProtoMessage()    {}
func (*ListExchangeReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_95588e2623cfabeb, []int{10}
}

func (m *ListExchangeReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListExchangeReq.Unmarshal(m, b)
}
func (m *ListExchangeReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListExchangeReq.Marshal(b, m, deterministic)
}
func (m *ListExchangeReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListExchangeReq.Merge(m, src)
}
func (m *ListExchangeReq) XXX_Size() int {
	return xxx_messageInfo_ListExchangeReq.Size(m)
}
func (m *ListExchangeReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListExchangeReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListExchangeReq proto.InternalMessageInfo

type ListExchangeRes struct {
	Exchange             *Exchange `protobuf:"bytes,1,opt,name=exchange,proto3" json:"exchange,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ListExchangeRes) Reset()         { *m = ListExchangeRes{} }
func (m *ListExchangeRes) String() string { return proto.CompactTextString(m) }
func (*ListExchangeRes) ProtoMessage()    {}
func (*ListExchangeRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_95588e2623cfabeb, []int{11}
}

func (m *ListExchangeRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListExchangeRes.Unmarshal(m, b)
}
func (m *ListExchangeRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListExchangeRes.Marshal(b, m, deterministic)
}
func (m *ListExchangeRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListExchangeRes.Merge(m, src)
}
func (m *ListExchangeRes) XXX_Size() int {
	return xxx_messageInfo_ListExchangeRes.Size(m)
}
func (m *ListExchangeRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ListExchangeRes.DiscardUnknown(m)
}

var xxx_messageInfo_ListExchangeRes proto.InternalMessageInfo

func (m *ListExchangeRes) GetExchange() *Exchange {
	if m != nil {
		return m.Exchange
	}
	return nil
}

type ListExchangesByUserReq struct {
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListExchangesByUserReq) Reset()         { *m = ListExchangesByUserReq{} }
func (m *ListExchangesByUserReq) String() string { return proto.CompactTextString(m) }
func (*ListExchangesByUserReq) ProtoMessage()    {}
func (*ListExchangesByUserReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_95588e2623cfabeb, []int{12}
}

func (m *ListExchangesByUserReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListExchangesByUserReq.Unmarshal(m, b)
}
func (m *ListExchangesByUserReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListExchangesByUserReq.Marshal(b, m, deterministic)
}
func (m *ListExchangesByUserReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListExchangesByUserReq.Merge(m, src)
}
func (m *ListExchangesByUserReq) XXX_Size() int {
	return xxx_messageInfo_ListExchangesByUserReq.Size(m)
}
func (m *ListExchangesByUserReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListExchangesByUserReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListExchangesByUserReq proto.InternalMessageInfo

func (m *ListExchangesByUserReq) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type ListExchangesByUserRes struct {
	Exchange             *Exchange `protobuf:"bytes,1,opt,name=exchange,proto3" json:"exchange,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ListExchangesByUserRes) Reset()         { *m = ListExchangesByUserRes{} }
func (m *ListExchangesByUserRes) String() string { return proto.CompactTextString(m) }
func (*ListExchangesByUserRes) ProtoMessage()    {}
func (*ListExchangesByUserRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_95588e2623cfabeb, []int{13}
}

func (m *ListExchangesByUserRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListExchangesByUserRes.Unmarshal(m, b)
}
func (m *ListExchangesByUserRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListExchangesByUserRes.Marshal(b, m, deterministic)
}
func (m *ListExchangesByUserRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListExchangesByUserRes.Merge(m, src)
}
func (m *ListExchangesByUserRes) XXX_Size() int {
	return xxx_messageInfo_ListExchangesByUserRes.Size(m)
}
func (m *ListExchangesByUserRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ListExchangesByUserRes.DiscardUnknown(m)
}

var xxx_messageInfo_ListExchangesByUserRes proto.InternalMessageInfo

func (m *ListExchangesByUserRes) GetExchange() *Exchange {
	if m != nil {
		return m.Exchange
	}
	return nil
}

func init() {
	proto.RegisterType((*Exchange)(nil), "exchange.Exchange")
	proto.RegisterType((*ExchangeAccountInfo)(nil), "exchange.ExchangeAccountInfo")
	proto.RegisterType((*CreateExchangeReq)(nil), "exchange.CreateExchangeReq")
	proto.RegisterType((*CreateExchangeRes)(nil), "exchange.CreateExchangeRes")
	proto.RegisterType((*UpdateExchangeReq)(nil), "exchange.UpdateExchangeReq")
	proto.RegisterType((*UpdateExchangeRes)(nil), "exchange.UpdateExchangeRes")
	proto.RegisterType((*ReadExchangeReq)(nil), "exchange.ReadExchangeReq")
	proto.RegisterType((*ReadExchangeRes)(nil), "exchange.ReadExchangeRes")
	proto.RegisterType((*DeleteExchangeReq)(nil), "exchange.DeleteExchangeReq")
	proto.RegisterType((*DeleteExchangeRes)(nil), "exchange.DeleteExchangeRes")
	proto.RegisterType((*ListExchangeReq)(nil), "exchange.ListExchangeReq")
	proto.RegisterType((*ListExchangeRes)(nil), "exchange.ListExchangeRes")
	proto.RegisterType((*ListExchangesByUserReq)(nil), "exchange.ListExchangesByUserReq")
	proto.RegisterType((*ListExchangesByUserRes)(nil), "exchange.ListExchangesByUserRes")
}

func init() {
	proto.RegisterFile("proto/exchange.proto", fileDescriptor_95588e2623cfabeb)
}

var fileDescriptor_95588e2623cfabeb = []byte{
	// 810 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x56, 0x6d, 0x4f, 0xe3, 0x46,
	0x10, 0x96, 0x79, 0x09, 0xc9, 0xe4, 0x7d, 0x43, 0xc1, 0x4d, 0x85, 0x1a, 0x82, 0x10, 0xa8, 0x2f,
	0x94, 0x52, 0xa9, 0xdf, 0x09, 0xa0, 0x96, 0xb6, 0xd0, 0xca, 0x40, 0x2b, 0xf5, 0x3e, 0x58, 0x1b,
	0x7b, 0x48, 0x2c, 0x1c, 0xdb, 0xec, 0xae, 0xe1, 0xfc, 0x3f, 0xee, 0x0f, 0xde, 0xfd, 0x87, 0xfb,
	0x7e, 0xda, 0xb5, 0x9d, 0xd8, 0x71, 0xe0, 0x14, 0xdd, 0x27, 0x98, 0xe7, 0x79, 0x66, 0xe6, 0x19,
	0xef, 0xec, 0x2a, 0xb0, 0x19, 0x30, 0x5f, 0xf8, 0x3f, 0xe1, 0x5b, 0x6b, 0x4c, 0xbd, 0x11, 0x1e,
	0xa9, 0x90, 0x94, 0xd3, 0xb8, 0xff, 0x41, 0x83, 0xf2, 0x45, 0x12, 0x90, 0x06, 0xac, 0x38, 0xb6,
	0xae, 0xf5, 0xb4, 0xc3, 0x8a, 0xb1, 0xe2, 0xd8, 0xe4, 0x7b, 0x68, 0x73, 0x74, 0xd1, 0x12, 0x68,
	0x9b, 0x69, 0x86, 0xbe, 0xa2, 0xe8, 0x56, 0x4a, 0x4c, 0x93, 0xf7, 0xa0, 0x9e, 0x6a, 0x4c, 0x8f,
	0x4e, 0x50, 0x5f, 0x55, 0xc2, 0x5a, 0x0a, 0x5e, 0xd3, 0x49, 0x5e, 0x24, 0xa2, 0x00, 0xf5, 0xb5,
	0xbc, 0xe8, 0x36, 0x0a, 0x90, 0x6c, 0xc3, 0x46, 0xc8, 0x91, 0x99, 0x8e, 0xad, 0xaf, 0x2b, 0xba,
	0x24, 0xc3, 0x4b, 0x5b, 0x12, 0x34, 0x70, 0xcc, 0x07, 0x8c, 0xf4, 0x52, 0x4c, 0xd0, 0xc0, 0xf9,
	0x13, 0x23, 0xb2, 0x03, 0x20, 0x09, 0x8e, 0x16, 0x43, 0xa1, 0x6f, 0x28, 0xae, 0x42, 0x03, 0xe7,
	0x46, 0x01, 0xfd, 0x8f, 0xeb, 0xd0, 0x49, 0x7d, 0x9e, 0x5a, 0x96, 0x1f, 0x7a, 0xe2, 0xd2, 0xbb,
	0xf7, 0x0b, 0xf3, 0xee, 0x43, 0x83, 0xc6, 0xb4, 0xe9, 0x85, 0x93, 0x21, 0xb2, 0x64, 0xd8, 0x7a,
	0x82, 0x5e, 0x2b, 0x50, 0x76, 0xb3, 0x18, 0x52, 0xf9, 0x55, 0xa8, 0x48, 0xc6, 0xac, 0x24, 0xc8,
	0xa9, 0x20, 0x5b, 0x50, 0xe2, 0x82, 0x8a, 0x90, 0x27, 0xc3, 0x25, 0x11, 0xe9, 0x42, 0xd9, 0x0a,
	0x19, 0x43, 0xcf, 0x8a, 0x92, 0xb9, 0xa6, 0x31, 0x21, 0xb0, 0x66, 0x51, 0x3e, 0x56, 0x63, 0x69,
	0x86, 0xfa, 0x5f, 0x7e, 0x7d, 0xf9, 0xd7, 0x7c, 0x76, 0xc4, 0xd8, 0x66, 0xf4, 0x99, 0x0e, 0x5d,
	0x54, 0xb3, 0x69, 0x46, 0x4b, 0x12, 0xff, 0x65, 0x70, 0x72, 0x00, 0x4d, 0xc1, 0xa8, 0xed, 0x78,
	0x23, 0x73, 0xe8, 0xfa, 0xd6, 0x03, 0xda, 0x7a, 0xb9, 0xa7, 0x1d, 0x96, 0x8d, 0x46, 0x02, 0x0f,
	0x62, 0x54, 0x56, 0x15, 0x8c, 0x7a, 0xfc, 0x1e, 0x19, 0x9f, 0x4a, 0x2b, 0x4a, 0xda, 0x9a, 0x12,
	0xa9, 0xf8, 0x00, 0x9a, 0xe9, 0x07, 0x49, 0xa5, 0x10, 0x57, 0x4d, 0xe0, 0x54, 0xb8, 0x0b, 0xb5,
	0x61, 0x18, 0xc9, 0xee, 0x81, 0xff, 0x8c, 0x4c, 0xaf, 0x2a, 0x9b, 0xd5, 0x18, 0xfb, 0x47, 0x42,
	0xe4, 0x07, 0x20, 0x01, 0x15, 0x02, 0x99, 0x67, 0xda, 0x34, 0x32, 0xa5, 0x2d, 0x64, 0x7a, 0x2d,
	0xee, 0x9c, 0x30, 0xe7, 0x34, 0xba, 0x55, 0xb8, 0x3c, 0x0a, 0x9b, 0x46, 0x4a, 0x64, 0xaa, 0x4e,
	0x7a, 0xbd, 0xa7, 0x1d, 0xae, 0x1a, 0xf5, 0x14, 0x3d, 0x93, 0x20, 0xf9, 0x15, 0xb6, 0x13, 0x40,
	0x4d, 0x9e, 0xb5, 0xd0, 0x50, 0x16, 0xbe, 0x9a, 0xd1, 0x83, 0x8c, 0x99, 0xef, 0xa0, 0xcd, 0x70,
	0x24, 0xf2, 0x19, 0x4d, 0x95, 0xd1, 0x94, 0x44, 0x56, 0xbb, 0x05, 0x25, 0x7c, 0x0c, 0x1d, 0x11,
	0xe9, 0x2d, 0x25, 0x48, 0x22, 0xf2, 0x2d, 0x54, 0x5d, 0xca, 0x85, 0x99, 0x90, 0x6d, 0x45, 0x82,
	0x84, 0x2e, 0x62, 0xc1, 0x3e, 0x34, 0x1c, 0xcf, 0x11, 0x0e, 0x75, 0xcd, 0x09, 0x65, 0x23, 0xc7,
	0xd3, 0x89, 0xd2, 0xd4, 0x13, 0xf4, 0x4a, 0x81, 0xd2, 0x8b, 0xeb, 0x7b, 0x23, 0xa9, 0x79, 0x40,
	0x61, 0x3e, 0x51, 0x37, 0x44, 0xbd, 0x13, 0x7b, 0x91, 0xc4, 0x95, 0xc2, 0xff, 0x95, 0xb0, 0xfc,
	0x88, 0x7c, 0xec, 0x33, 0x91, 0x17, 0x6f, 0xc6, 0x4b, 0xa1, 0x98, 0x8c, 0xba, 0x7f, 0x06, 0xed,
	0x33, 0xb5, 0x96, 0xe9, 0xf2, 0x1b, 0xf8, 0x48, 0x8e, 0x60, 0x7a, 0xfb, 0xd5, 0xea, 0x57, 0x4f,
	0xc8, 0xd1, 0xf4, 0x79, 0x98, 0x0a, 0x67, 0x2f, 0xc4, 0x3b, 0xad, 0x58, 0x85, 0x2f, 0x5b, 0x85,
	0xfc, 0x0d, 0x1d, 0x2c, 0xde, 0x40, 0x75, 0xbf, 0xaa, 0x27, 0x3b, 0xc5, 0xd4, 0x8c, 0xc8, 0x58,
	0x94, 0x29, 0x67, 0xbb, 0x0b, 0xec, 0x2f, 0x9c, 0x6d, 0x41, 0x91, 0xa5, 0x47, 0xeb, 0xef, 0x42,
	0xd3, 0x40, 0x6a, 0x67, 0x7d, 0xcc, 0x3d, 0x2c, 0xfd, 0xd3, 0x79, 0xc9, 0xf2, 0x5d, 0xf6, 0xa0,
	0x7d, 0x8e, 0x2e, 0xe6, 0xe7, 0x9d, 0xef, 0xf3, 0x63, 0x51, 0xc4, 0x89, 0x0e, 0x1b, 0x3c, 0xb4,
	0x2c, 0xe4, 0x5c, 0x29, 0xcb, 0x46, 0x1a, 0xf6, 0xdb, 0xd0, 0xfc, 0xcb, 0xe1, 0x22, 0x53, 0x51,
	0x3a, 0xcd, 0x43, 0xcb, 0x3b, 0xfd, 0x19, 0xb6, 0xb2, 0x25, 0xf8, 0x20, 0xba, 0xe3, 0xc8, 0xa4,
	0xdd, 0xcc, 0xc3, 0xae, 0x65, 0x1f, 0xf6, 0xfe, 0xef, 0x2f, 0xa4, 0x2c, 0xdd, 0xfc, 0xe4, 0xfd,
	0x2a, 0x34, 0x53, 0xf8, 0x06, 0xd9, 0x93, 0x63, 0x21, 0xf9, 0x03, 0x1a, 0xf9, 0x05, 0x26, 0xdf,
	0xcc, 0x6a, 0x14, 0x2e, 0x48, 0xf7, 0x15, 0x92, 0x93, 0x73, 0xa8, 0x65, 0x4f, 0x92, 0x7c, 0x3d,
	0x13, 0xcf, 0x2d, 0x41, 0xf7, 0x45, 0x8a, 0x4b, 0x47, 0xf9, 0xbd, 0xcb, 0x3a, 0x2a, 0xac, 0x75,
	0xf7, 0x15, 0x52, 0xd5, 0xca, 0x9f, 0x79, 0xb6, 0x56, 0x61, 0x65, 0xba, 0xaf, 0x90, 0x9c, 0xfc,
	0x06, 0xf5, 0xdc, 0x39, 0x64, 0xc7, 0x9b, 0xdb, 0x94, 0xee, 0x8b, 0x14, 0x3f, 0xd6, 0xc8, 0x1b,
	0xe8, 0x2c, 0x38, 0x50, 0xd2, 0x5b, 0x9c, 0x33, 0x5b, 0x91, 0xee, 0xe7, 0x14, 0xfc, 0x58, 0x1b,
	0xd4, 0xfe, 0x87, 0x54, 0x14, 0x0c, 0x87, 0x25, 0xf5, 0x93, 0xe6, 0x97, 0x4f, 0x01, 0x00, 0x00,
	0xff, 0xff, 0x93, 0xdd, 0xb9, 0x36, 0xea, 0x08, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ExchangeServiceClient is the client API for ExchangeService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ExchangeServiceClient interface {
	CreateExchange(ctx context.Context, in *CreateExchangeReq, opts ...grpc.CallOption) (*CreateExchangeRes, error)
	ReadExchange(ctx context.Context, in *ReadExchangeReq, opts ...grpc.CallOption) (*ReadExchangeRes, error)
	UpdateExchange(ctx context.Context, in *UpdateExchangeReq, opts ...grpc.CallOption) (*UpdateExchangeRes, error)
	DeleteExchange(ctx context.Context, in *DeleteExchangeReq, opts ...grpc.CallOption) (*DeleteExchangeRes, error)
	ListExchanges(ctx context.Context, in *ListExchangeReq, opts ...grpc.CallOption) (ExchangeService_ListExchangesClient, error)
	ListExchangesByUser(ctx context.Context, in *ListExchangesByUserReq, opts ...grpc.CallOption) (ExchangeService_ListExchangesByUserClient, error)
}

type exchangeServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewExchangeServiceClient(cc grpc.ClientConnInterface) ExchangeServiceClient {
	return &exchangeServiceClient{cc}
}

func (c *exchangeServiceClient) CreateExchange(ctx context.Context, in *CreateExchangeReq, opts ...grpc.CallOption) (*CreateExchangeRes, error) {
	out := new(CreateExchangeRes)
	err := c.cc.Invoke(ctx, "/exchange.ExchangeService/CreateExchange", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *exchangeServiceClient) ReadExchange(ctx context.Context, in *ReadExchangeReq, opts ...grpc.CallOption) (*ReadExchangeRes, error) {
	out := new(ReadExchangeRes)
	err := c.cc.Invoke(ctx, "/exchange.ExchangeService/ReadExchange", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *exchangeServiceClient) UpdateExchange(ctx context.Context, in *UpdateExchangeReq, opts ...grpc.CallOption) (*UpdateExchangeRes, error) {
	out := new(UpdateExchangeRes)
	err := c.cc.Invoke(ctx, "/exchange.ExchangeService/UpdateExchange", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *exchangeServiceClient) DeleteExchange(ctx context.Context, in *DeleteExchangeReq, opts ...grpc.CallOption) (*DeleteExchangeRes, error) {
	out := new(DeleteExchangeRes)
	err := c.cc.Invoke(ctx, "/exchange.ExchangeService/DeleteExchange", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *exchangeServiceClient) ListExchanges(ctx context.Context, in *ListExchangeReq, opts ...grpc.CallOption) (ExchangeService_ListExchangesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ExchangeService_serviceDesc.Streams[0], "/exchange.ExchangeService/ListExchanges", opts...)
	if err != nil {
		return nil, err
	}
	x := &exchangeServiceListExchangesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ExchangeService_ListExchangesClient interface {
	Recv() (*ListExchangeRes, error)
	grpc.ClientStream
}

type exchangeServiceListExchangesClient struct {
	grpc.ClientStream
}

func (x *exchangeServiceListExchangesClient) Recv() (*ListExchangeRes, error) {
	m := new(ListExchangeRes)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *exchangeServiceClient) ListExchangesByUser(ctx context.Context, in *ListExchangesByUserReq, opts ...grpc.CallOption) (ExchangeService_ListExchangesByUserClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ExchangeService_serviceDesc.Streams[1], "/exchange.ExchangeService/ListExchangesByUser", opts...)
	if err != nil {
		return nil, err
	}
	x := &exchangeServiceListExchangesByUserClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ExchangeService_ListExchangesByUserClient interface {
	Recv() (*ListExchangesByUserRes, error)
	grpc.ClientStream
}

type exchangeServiceListExchangesByUserClient struct {
	grpc.ClientStream
}

func (x *exchangeServiceListExchangesByUserClient) Recv() (*ListExchangesByUserRes, error) {
	m := new(ListExchangesByUserRes)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ExchangeServiceServer is the server API for ExchangeService service.
type ExchangeServiceServer interface {
	CreateExchange(context.Context, *CreateExchangeReq) (*CreateExchangeRes, error)
	ReadExchange(context.Context, *ReadExchangeReq) (*ReadExchangeRes, error)
	UpdateExchange(context.Context, *UpdateExchangeReq) (*UpdateExchangeRes, error)
	DeleteExchange(context.Context, *DeleteExchangeReq) (*DeleteExchangeRes, error)
	ListExchanges(*ListExchangeReq, ExchangeService_ListExchangesServer) error
	ListExchangesByUser(*ListExchangesByUserReq, ExchangeService_ListExchangesByUserServer) error
}

// UnimplementedExchangeServiceServer can be embedded to have forward compatible implementations.
type UnimplementedExchangeServiceServer struct {
}

func (*UnimplementedExchangeServiceServer) CreateExchange(ctx context.Context, req *CreateExchangeReq) (*CreateExchangeRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateExchange not implemented")
}
func (*UnimplementedExchangeServiceServer) ReadExchange(ctx context.Context, req *ReadExchangeReq) (*ReadExchangeRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadExchange not implemented")
}
func (*UnimplementedExchangeServiceServer) UpdateExchange(ctx context.Context, req *UpdateExchangeReq) (*UpdateExchangeRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateExchange not implemented")
}
func (*UnimplementedExchangeServiceServer) DeleteExchange(ctx context.Context, req *DeleteExchangeReq) (*DeleteExchangeRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteExchange not implemented")
}
func (*UnimplementedExchangeServiceServer) ListExchanges(req *ListExchangeReq, srv ExchangeService_ListExchangesServer) error {
	return status.Errorf(codes.Unimplemented, "method ListExchanges not implemented")
}
func (*UnimplementedExchangeServiceServer) ListExchangesByUser(req *ListExchangesByUserReq, srv ExchangeService_ListExchangesByUserServer) error {
	return status.Errorf(codes.Unimplemented, "method ListExchangesByUser not implemented")
}

func RegisterExchangeServiceServer(s *grpc.Server, srv ExchangeServiceServer) {
	s.RegisterService(&_ExchangeService_serviceDesc, srv)
}

func _ExchangeService_CreateExchange_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateExchangeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExchangeServiceServer).CreateExchange(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/exchange.ExchangeService/CreateExchange",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExchangeServiceServer).CreateExchange(ctx, req.(*CreateExchangeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExchangeService_ReadExchange_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadExchangeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExchangeServiceServer).ReadExchange(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/exchange.ExchangeService/ReadExchange",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExchangeServiceServer).ReadExchange(ctx, req.(*ReadExchangeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExchangeService_UpdateExchange_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateExchangeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExchangeServiceServer).UpdateExchange(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/exchange.ExchangeService/UpdateExchange",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExchangeServiceServer).UpdateExchange(ctx, req.(*UpdateExchangeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExchangeService_DeleteExchange_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteExchangeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExchangeServiceServer).DeleteExchange(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/exchange.ExchangeService/DeleteExchange",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExchangeServiceServer).DeleteExchange(ctx, req.(*DeleteExchangeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExchangeService_ListExchanges_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListExchangeReq)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ExchangeServiceServer).ListExchanges(m, &exchangeServiceListExchangesServer{stream})
}

type ExchangeService_ListExchangesServer interface {
	Send(*ListExchangeRes) error
	grpc.ServerStream
}

type exchangeServiceListExchangesServer struct {
	grpc.ServerStream
}

func (x *exchangeServiceListExchangesServer) Send(m *ListExchangeRes) error {
	return x.ServerStream.SendMsg(m)
}

func _ExchangeService_ListExchangesByUser_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListExchangesByUserReq)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ExchangeServiceServer).ListExchangesByUser(m, &exchangeServiceListExchangesByUserServer{stream})
}

type ExchangeService_ListExchangesByUserServer interface {
	Send(*ListExchangesByUserRes) error
	grpc.ServerStream
}

type exchangeServiceListExchangesByUserServer struct {
	grpc.ServerStream
}

func (x *exchangeServiceListExchangesByUserServer) Send(m *ListExchangesByUserRes) error {
	return x.ServerStream.SendMsg(m)
}

var _ExchangeService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "exchange.ExchangeService",
	HandlerType: (*ExchangeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateExchange",
			Handler:    _ExchangeService_CreateExchange_Handler,
		},
		{
			MethodName: "ReadExchange",
			Handler:    _ExchangeService_ReadExchange_Handler,
		},
		{
			MethodName: "UpdateExchange",
			Handler:    _ExchangeService_UpdateExchange_Handler,
		},
		{
			MethodName: "DeleteExchange",
			Handler:    _ExchangeService_DeleteExchange_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListExchanges",
			Handler:       _ExchangeService_ListExchanges_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ListExchangesByUser",
			Handler:       _ExchangeService_ListExchangesByUser_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "proto/exchange.proto",
}
