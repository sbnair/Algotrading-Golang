// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/eventhistory.proto

package eventhistorypb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ListEventHistoryReq struct {
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListEventHistoryReq) Reset()         { *m = ListEventHistoryReq{} }
func (m *ListEventHistoryReq) String() string { return proto.CompactTextString(m) }
func (*ListEventHistoryReq) ProtoMessage()    {}
func (*ListEventHistoryReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_07bf2a04f2257c1f, []int{0}
}

func (m *ListEventHistoryReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListEventHistoryReq.Unmarshal(m, b)
}
func (m *ListEventHistoryReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListEventHistoryReq.Marshal(b, m, deterministic)
}
func (m *ListEventHistoryReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListEventHistoryReq.Merge(m, src)
}
func (m *ListEventHistoryReq) XXX_Size() int {
	return xxx_messageInfo_ListEventHistoryReq.Size(m)
}
func (m *ListEventHistoryReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListEventHistoryReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListEventHistoryReq proto.InternalMessageInfo

func (m *ListEventHistoryReq) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type ListEventHistoryRes struct {
	EventHistoryExchange *EventHistoryExchange `protobuf:"bytes,1,opt,name=eventHistoryExchange,proto3" json:"eventHistoryExchange,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ListEventHistoryRes) Reset()         { *m = ListEventHistoryRes{} }
func (m *ListEventHistoryRes) String() string { return proto.CompactTextString(m) }
func (*ListEventHistoryRes) ProtoMessage()    {}
func (*ListEventHistoryRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_07bf2a04f2257c1f, []int{1}
}

func (m *ListEventHistoryRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListEventHistoryRes.Unmarshal(m, b)
}
func (m *ListEventHistoryRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListEventHistoryRes.Marshal(b, m, deterministic)
}
func (m *ListEventHistoryRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListEventHistoryRes.Merge(m, src)
}
func (m *ListEventHistoryRes) XXX_Size() int {
	return xxx_messageInfo_ListEventHistoryRes.Size(m)
}
func (m *ListEventHistoryRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ListEventHistoryRes.DiscardUnknown(m)
}

var xxx_messageInfo_ListEventHistoryRes proto.InternalMessageInfo

func (m *ListEventHistoryRes) GetEventHistoryExchange() *EventHistoryExchange {
	if m != nil {
		return m.EventHistoryExchange
	}
	return nil
}

type EventHistoryExchange struct {
	Id                   string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	OperationType        string    `protobuf:"bytes,2,opt,name=operation_type,json=operationType,proto3" json:"operation_type,omitempty"`
	Timestamp            string    `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Db                   string    `protobuf:"bytes,4,opt,name=db,proto3" json:"db,omitempty"`
	Collection           string    `protobuf:"bytes,5,opt,name=collection,proto3" json:"collection,omitempty"`
	Name                 string    `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	UserId               string    `protobuf:"bytes,7,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	OldValue             *Exchange `protobuf:"bytes,8,opt,name=old_value,json=oldValue,proto3" json:"old_value,omitempty"`
	NewValue             *Exchange `protobuf:"bytes,9,opt,name=new_value,json=newValue,proto3" json:"new_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *EventHistoryExchange) Reset()         { *m = EventHistoryExchange{} }
func (m *EventHistoryExchange) String() string { return proto.CompactTextString(m) }
func (*EventHistoryExchange) ProtoMessage()    {}
func (*EventHistoryExchange) Descriptor() ([]byte, []int) {
	return fileDescriptor_07bf2a04f2257c1f, []int{2}
}

func (m *EventHistoryExchange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventHistoryExchange.Unmarshal(m, b)
}
func (m *EventHistoryExchange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventHistoryExchange.Marshal(b, m, deterministic)
}
func (m *EventHistoryExchange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventHistoryExchange.Merge(m, src)
}
func (m *EventHistoryExchange) XXX_Size() int {
	return xxx_messageInfo_EventHistoryExchange.Size(m)
}
func (m *EventHistoryExchange) XXX_DiscardUnknown() {
	xxx_messageInfo_EventHistoryExchange.DiscardUnknown(m)
}

var xxx_messageInfo_EventHistoryExchange proto.InternalMessageInfo

func (m *EventHistoryExchange) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *EventHistoryExchange) GetOperationType() string {
	if m != nil {
		return m.OperationType
	}
	return ""
}

func (m *EventHistoryExchange) GetTimestamp() string {
	if m != nil {
		return m.Timestamp
	}
	return ""
}

func (m *EventHistoryExchange) GetDb() string {
	if m != nil {
		return m.Db
	}
	return ""
}

func (m *EventHistoryExchange) GetCollection() string {
	if m != nil {
		return m.Collection
	}
	return ""
}

func (m *EventHistoryExchange) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *EventHistoryExchange) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *EventHistoryExchange) GetOldValue() *Exchange {
	if m != nil {
		return m.OldValue
	}
	return nil
}

func (m *EventHistoryExchange) GetNewValue() *Exchange {
	if m != nil {
		return m.NewValue
	}
	return nil
}

type Exchange struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	SelectedExchange     string   `protobuf:"bytes,2,opt,name=selected_exchange,json=selectedExchange,proto3" json:"selected_exchange,omitempty"`
	ExchangeName         string   `protobuf:"bytes,3,opt,name=exchange_name,json=exchangeName,proto3" json:"exchange_name,omitempty"`
	ExchangeType         string   `protobuf:"bytes,4,opt,name=exchange_type,json=exchangeType,proto3" json:"exchange_type,omitempty"`
	UserId               string   `protobuf:"bytes,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ApiKey               string   `protobuf:"bytes,6,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
	ApiSecret            string   `protobuf:"bytes,7,opt,name=api_secret,json=apiSecret,proto3" json:"api_secret,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Exchange) Reset()         { *m = Exchange{} }
func (m *Exchange) String() string { return proto.CompactTextString(m) }
func (*Exchange) ProtoMessage()    {}
func (*Exchange) Descriptor() ([]byte, []int) {
	return fileDescriptor_07bf2a04f2257c1f, []int{3}
}

func (m *Exchange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Exchange.Unmarshal(m, b)
}
func (m *Exchange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Exchange.Marshal(b, m, deterministic)
}
func (m *Exchange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Exchange.Merge(m, src)
}
func (m *Exchange) XXX_Size() int {
	return xxx_messageInfo_Exchange.Size(m)
}
func (m *Exchange) XXX_DiscardUnknown() {
	xxx_messageInfo_Exchange.DiscardUnknown(m)
}

var xxx_messageInfo_Exchange proto.InternalMessageInfo

func (m *Exchange) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Exchange) GetSelectedExchange() string {
	if m != nil {
		return m.SelectedExchange
	}
	return ""
}

func (m *Exchange) GetExchangeName() string {
	if m != nil {
		return m.ExchangeName
	}
	return ""
}

func (m *Exchange) GetExchangeType() string {
	if m != nil {
		return m.ExchangeType
	}
	return ""
}

func (m *Exchange) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *Exchange) GetApiKey() string {
	if m != nil {
		return m.ApiKey
	}
	return ""
}

func (m *Exchange) GetApiSecret() string {
	if m != nil {
		return m.ApiSecret
	}
	return ""
}

func init() {
	proto.RegisterType((*ListEventHistoryReq)(nil), "eventhistory.ListEventHistoryReq")
	proto.RegisterType((*ListEventHistoryRes)(nil), "eventhistory.ListEventHistoryRes")
	proto.RegisterType((*EventHistoryExchange)(nil), "eventhistory.EventHistoryExchange")
	proto.RegisterType((*Exchange)(nil), "eventhistory.Exchange")
}

func init() {
	proto.RegisterFile("proto/eventhistory.proto", fileDescriptor_07bf2a04f2257c1f)
}

var fileDescriptor_07bf2a04f2257c1f = []byte{
	// 405 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x93, 0x61, 0x8b, 0xd3, 0x30,
	0x18, 0xc7, 0x69, 0xdd, 0x75, 0xeb, 0xe3, 0xdd, 0x98, 0xb9, 0xc3, 0x0b, 0xa2, 0xa2, 0x15, 0x41,
	0x10, 0xa6, 0xdc, 0x7d, 0x03, 0x61, 0xa0, 0x28, 0xbe, 0xd8, 0xc9, 0xbd, 0xb8, 0x37, 0x25, 0x6d,
	0x1e, 0x5c, 0xb0, 0x6d, 0xb2, 0x26, 0xdb, 0xec, 0xd7, 0xf2, 0x23, 0xf9, 0x49, 0x24, 0xe9, 0x3a,
	0xd3, 0x51, 0xbd, 0x77, 0xed, 0xef, 0xf9, 0xff, 0x43, 0xf2, 0x6b, 0x0a, 0x54, 0xd5, 0xd2, 0xc8,
	0x77, 0xb8, 0xc5, 0xca, 0xac, 0x84, 0x36, 0xb2, 0x6e, 0xe6, 0x0e, 0x91, 0x53, 0x9f, 0x25, 0x73,
	0x38, 0xff, 0x22, 0xb4, 0x59, 0x58, 0xf6, 0xb1, 0x65, 0x4b, 0x5c, 0x93, 0x4b, 0x18, 0x6f, 0x34,
	0xd6, 0xa9, 0xe0, 0x34, 0x78, 0x11, 0xbc, 0x89, 0x97, 0x91, 0x7d, 0xfd, 0xc4, 0x93, 0x72, 0x28,
	0xaf, 0xc9, 0x2d, 0x5c, 0xa0, 0x87, 0x16, 0x3f, 0xf3, 0x15, 0xab, 0xbe, 0xa3, 0x2b, 0x3f, 0xbc,
	0x4a, 0xe6, 0xbd, 0x7d, 0x2c, 0x06, 0x92, 0xcb, 0xc1, 0x7e, 0xf2, 0x2b, 0x84, 0x8b, 0xa1, 0x38,
	0x99, 0x42, 0x78, 0xd8, 0x5b, 0x28, 0x38, 0x79, 0x0d, 0x53, 0xa9, 0xb0, 0x66, 0x46, 0xc8, 0x2a,
	0x35, 0x8d, 0x42, 0x1a, 0xba, 0xd9, 0xd9, 0x81, 0x7e, 0x6b, 0x14, 0x92, 0xa7, 0x10, 0x1b, 0x51,
	0xa2, 0x36, 0xac, 0x54, 0xf4, 0x81, 0x4b, 0xfc, 0x05, 0x76, 0x51, 0x9e, 0xd1, 0x51, 0xbb, 0x28,
	0xcf, 0xc8, 0x73, 0x80, 0x5c, 0x16, 0x05, 0xe6, 0xb6, 0x4f, 0x4f, 0x1c, 0xf7, 0x08, 0x21, 0x30,
	0xaa, 0x58, 0x89, 0x34, 0x72, 0x13, 0xf7, 0xec, 0x9b, 0x1b, 0xfb, 0xe6, 0xc8, 0x35, 0xc4, 0xb2,
	0xe0, 0xe9, 0x96, 0x15, 0x1b, 0xa4, 0x13, 0xe7, 0xe5, 0xf1, 0x91, 0x97, 0xce, 0xc5, 0x44, 0x16,
	0xfc, 0xd6, 0xe6, 0x6c, 0xa9, 0xc2, 0xdd, 0xbe, 0x14, 0xff, 0xbf, 0x54, 0xe1, 0xce, 0x95, 0x92,
	0xdf, 0x01, 0x4c, 0xfe, 0x29, 0xea, 0x2d, 0x3c, 0xd2, 0x68, 0x0f, 0x80, 0x3c, 0xc5, 0xee, 0x33,
	0xb5, 0xae, 0x66, 0xdd, 0xe0, 0x50, 0x7e, 0x05, 0x67, 0x5d, 0x26, 0x75, 0x27, 0x6d, 0x95, 0x9d,
	0x76, 0xf0, 0xab, 0x3d, 0xb1, 0x1f, 0x72, 0xe6, 0x47, 0xfd, 0x90, 0x13, 0xef, 0x69, 0x39, 0xe9,
	0x69, 0xb9, 0x84, 0x31, 0x53, 0x22, 0xfd, 0x81, 0xcd, 0x5e, 0x63, 0xc4, 0x94, 0xf8, 0x8c, 0x0d,
	0x79, 0x06, 0x60, 0x07, 0x1a, 0xf3, 0x1a, 0xcd, 0xde, 0x65, 0xcc, 0x94, 0xb8, 0x71, 0xe0, 0x6a,
	0x0d, 0xe7, 0xfe, 0xc5, 0xb8, 0xc1, 0x7a, 0x2b, 0x72, 0x24, 0x77, 0x30, 0x3b, 0xbe, 0x9f, 0xe4,
	0x65, 0xdf, 0xd8, 0xc0, 0x7d, 0x7f, 0x72, 0x6f, 0x44, 0xbf, 0x0f, 0x3e, 0xcc, 0xee, 0xa6, 0x7e,
	0x4a, 0x65, 0x59, 0xe4, 0x7e, 0xa9, 0xeb, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x51, 0x5e, 0xe6,
	0xed, 0x6e, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// EventHistoryServiceClient is the client API for EventHistoryService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EventHistoryServiceClient interface {
	ListEventHistory(ctx context.Context, in *ListEventHistoryReq, opts ...grpc.CallOption) (EventHistoryService_ListEventHistoryClient, error)
}

type eventHistoryServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewEventHistoryServiceClient(cc grpc.ClientConnInterface) EventHistoryServiceClient {
	return &eventHistoryServiceClient{cc}
}

func (c *eventHistoryServiceClient) ListEventHistory(ctx context.Context, in *ListEventHistoryReq, opts ...grpc.CallOption) (EventHistoryService_ListEventHistoryClient, error) {
	stream, err := c.cc.NewStream(ctx, &_EventHistoryService_serviceDesc.Streams[0], "/eventhistory.EventHistoryService/ListEventHistory", opts...)
	if err != nil {
		return nil, err
	}
	x := &eventHistoryServiceListEventHistoryClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type EventHistoryService_ListEventHistoryClient interface {
	Recv() (*ListEventHistoryRes, error)
	grpc.ClientStream
}

type eventHistoryServiceListEventHistoryClient struct {
	grpc.ClientStream
}

func (x *eventHistoryServiceListEventHistoryClient) Recv() (*ListEventHistoryRes, error) {
	m := new(ListEventHistoryRes)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// EventHistoryServiceServer is the server API for EventHistoryService service.
type EventHistoryServiceServer interface {
	ListEventHistory(*ListEventHistoryReq, EventHistoryService_ListEventHistoryServer) error
}

// UnimplementedEventHistoryServiceServer can be embedded to have forward compatible implementations.
type UnimplementedEventHistoryServiceServer struct {
}

func (*UnimplementedEventHistoryServiceServer) ListEventHistory(req *ListEventHistoryReq, srv EventHistoryService_ListEventHistoryServer) error {
	return status.Errorf(codes.Unimplemented, "method ListEventHistory not implemented")
}

func RegisterEventHistoryServiceServer(s *grpc.Server, srv EventHistoryServiceServer) {
	s.RegisterService(&_EventHistoryService_serviceDesc, srv)
}

func _EventHistoryService_ListEventHistory_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListEventHistoryReq)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(EventHistoryServiceServer).ListEventHistory(m, &eventHistoryServiceListEventHistoryServer{stream})
}

type EventHistoryService_ListEventHistoryServer interface {
	Send(*ListEventHistoryRes) error
	grpc.ServerStream
}

type eventHistoryServiceListEventHistoryServer struct {
	grpc.ServerStream
}

func (x *eventHistoryServiceListEventHistoryServer) Send(m *ListEventHistoryRes) error {
	return x.ServerStream.SendMsg(m)
}

var _EventHistoryService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "eventhistory.EventHistoryService",
	HandlerType: (*EventHistoryServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListEventHistory",
			Handler:       _EventHistoryService_ListEventHistory_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "proto/eventhistory.proto",
}
